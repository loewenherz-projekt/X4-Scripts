<?xml version="1.0" encoding="utf-8"?>
<mdscript name="RML_Escort_Ambiguous" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="md.xsd">
  <cues>

    <!--
    This RML is intended for use in Master-Missions. 
    It handles checking if the player destroyed enough ship(s) matching the specifications
    
    $feedbackvalue:
    -103 $EscortSpecs parameter left undefined
    -101 Cue parameters not defined
    -100: Undefined failure. Defaulted to -100
    1: All Targets matching specs destroyed -->

    <library name="EscortAmbiguous">
      <params>
        <param name="EndSignalCue"/>
        <param name="MissionCue"/>
        <param name="StartStep"       default="1"     comment="Briefing step to start the mission on"/>
        <param name="UpdateBriefing"  default="true"  comment="Update the briefing objective step when the objective is updated"/>
        <param name="DebugChance"     default="0" />

        <param name="Text_Objective"                  comment="Objective text to escort the matching objects"/>
        <param name="EscortSpecs"                      comment="Spec of the ships to escort"/>
        <param name="ArrivalCount"        default="1"     comment="How many of 'EscortSpec' ships have to have arrived before completion"/>
        <param name="EscortFaction"       default="null"                comment="What Faction the Target needs to belong to"/>
        <param name="DestinationFaction"  default="null"  comment="The Faction to which the target station needs to belong"/>
        <param name="Destinations"        default="null"  comment="Group of Destination Stations"/>
      </params>
      <actions>
        <set_value name="$feedbackvalue" exact="0"/>
        <create_list name="$ErrorList"/>

        <do_if value="not $EndSignalCue or not $MissionCue">
          <append_to_list name="$ErrorList" exact="-101"/>
        </do_if>

        <do_if value="not $EscortSpecs">
          <append_to_list name="$ErrorList" exact="-103"/>
        </do_if>

      </actions>
      <cues>

        <cue name="Signal_Cleanup" onfail="cancel">
          <conditions>
            <check_value value="$ErrorList.count" min="1"/>
          </conditions>
          <actions>
            <signal_cue cue="Cleanup"/>
          </actions>
        </cue>

        <cue name="StartMission" onfail="cancel">
          <conditions>
            <check_value value="$ErrorList.count" min="0"/>
          </conditions>
          <actions>
            <set_value name="$DebugChance" exact="0"/>
            <debug_text text="'StartMission'" chance="$DebugChance"/>
            <set_value name="$ArrivalCountDone" exact="0"/>
            <create_group groupname="$AlreadyEscorted"/>
            <create_group groupname="$VentureModules"/>

            <!-- Determine what fills Destinations Group -->
            <do_if value="$EscortSpecs.$destination?">
              <do_if value="$EscortSpecs.$destination == 'player_hq'">
                <add_to_group groupname="$Destinations" object="player.headquarters"/>
              </do_if>

              <do_elseif value="$EscortSpecs.$destination == 'player_venturedocks'">
                <find_station_by_true_owner groupname="$Destinations" space="player.galaxy" faction="faction.player" multiple="true">
                  <match_content macro="macro.dockarea_gen_m_venturer_01_macro" checkoperational="true"/>
                </find_station_by_true_owner>
                <do_if value="$Destinations.count">
                  <do_all exact="$Destinations.count" counter="$i">
                    <find_object_component groupname="$VentureModules" object="$Destinations.{$i}"  macro="macro.dockarea_gen_m_venturer_01_macro"  />
                  </do_all>
                </do_if>
                <debug_text text="$Destinations.{1}.knownname"/>
              </do_elseif>

              <do_elseif value="$EscortSpecs.$destination == 'factions_hq'">
                <do_if value="$DestinationFaction">
                  <find_station_by_true_owner groupname="$Destinations" space="player.galaxy" faction="$DestinationFaction" factionheadquarters="true"/>
                </do_if>
                <do_else>
                  <find_station groupname="$Destinations" space="player.galaxy" factionheadquarters="true" reachablefrom="player.zone" multiple="true">
                    <match_relation_to faction="$EscortFaction" comparison="ge" relation="dock"/>
                  </find_station>
                </do_else>
                <do_all exact="$Destinations.count" counter="$i">
                  <debug_text text="'$FACTIONS: ' + $Destinations.{$i} + ' ' + $Destinations.{$i}.knownname" chance="$DebugChance"/>
                </do_all>
              </do_elseif>

            </do_if>

            <do_if value="$Destinations.count lt 1">
              <debug_text text="'No suitable stations found'" chance="$DebugChance"/>
              <do_if value="$EscortSpecs.$destination == 'player_venturedocks'">
                <signal_cue_instantly cue="BuildVentureDock"/>
              </do_if>
            </do_if>
            <do_else>
              <signal_cue cue="UpdateBriefing"/>
            </do_else>
          </actions>
          <cues>

            <cue name="CheckMissionStatus" instantiate="true">
              <conditions>
                <event_object_docked_at group="$Destinations"/>
                <check_value value="not $AlreadyEscorted.indexof.{event.param}"/>
              </conditions>
              <actions>
                <set_value name="$shipmatches" exact="true"/>
                
                <set_value name="$DockingShip" exact="event.param"/>
                <do_if value="$EscortFaction == $DockingShip.owner">
                  <add_to_group groupname="$AlreadyEscorted" object="$DockingShip"/>
                </do_if>

                <do_if value="$shipmatches and $EscortSpecs.$macro?">
                  <do_if value="$EscortSpecs.$macro != $DockingShip.macro">
                    <set_value name="$shipmatches" exact="false"/>
                  </do_if>
                </do_if>

                <do_if value="$shipmatches and $EscortSpecs.$venture?">
                  <do_if value="$EscortSpecs.$venture != $DockingShip.venture">
                    <set_value name="$shipmatches" exact="false"/>
                  </do_if>
                </do_if>

                <do_if value="$shipmatches and @$EscortSpecs.$allycoalition">
                  <do_if value="not faction.player.iscoalitionally.{$DockingShip}">
                    <set_value name="$shipmatches" exact="false"/>
                  </do_if>
                </do_if>

                <!-- success check -->
                <do_if value="$shipmatches">
                  <signal_cue cue="UpdateBriefing"/>
                  <set_value name="$ArrivalCountDone" operation="add"/>
                </do_if>

                <do_if value="$ArrivalCountDone ge $ArrivalCount">
                  <set_value name="$feedbackvalue" exact="1" comment="success"/>
                  <signal_cue cue="Cleanup"/>
                </do_if>

              </actions>
            </cue>

            <cue name="DestinationStation_HQChanged" instantiate="true">
              <conditions>
                <check_all>
                  <event_faction_headquarters_changed/>
                  <check_value value="$EscortSpecs.$destination == 'factions_hq'"/>
                </check_all>
              </conditions>
              <actions>
                <do_if value="DestinationFaction?">
                  <do_if value="event.param == DestinationFaction">
                    <add_to_group groupname="$Destinations" object="event.param2"/>
                  </do_if>
                </do_if>
                <do_else>
                  <do_if value="event.param.hasrelation.dock.{$EscortFaction}" comment="only add if Target can actually dock at station">
                    <debug_text text="'New Faction HQ: ' + event.param2.knownname"/>
                    <add_to_group groupname="$Destinations" object="event.param2"/>
                  </do_if>
                </do_else>
              </actions>
            </cue>

            <cue name="BuildVentureDock" instantiate="true">
              <conditions>
                <check_any>
                  <check_all>
                    <event_object_destroyed group="$VentureModules"/>
                    <check_value value="$VentureModules.count == 1" comment="last Venture Module has been Destroyed"/>
                  </check_all>
                  <event_cue_signalled/>
                </check_any>
              </conditions>
              <actions>
                <update_mission cue="$MissionCue">
                  <briefing>
                    <objective step="1" action="objective.build_module" text="{20104,70701}" comment="Build S/M Ship Fabrication Module"/>
                    <objective step="2" action="objective.escort" text="$Text_Objective"/>
                  </briefing>
                </update_mission>
                <set_objective_from_briefing cue="$MissionCue" step="1"/>
              </actions>
              <cues>
                <cue name="BuildVentureDockBuilt">
                  <conditions>
                    <event_player_build_finished_components comment="check each time a module is completed"/>
                    <count_object_components groupname="$VentureModules" object="event.param.buildanchor" macro="macro.dockarea_gen_m_venturer_01_macro" min="1"/>
                  </conditions>
                  <actions>
                    <debug_text text="'Venture module was built on station ' + event.param.buildanchor + ' ' + event.param.buildanchor.knownname" chance="$DebugChance"/>

                    <add_to_group groupname="$Destinations" object="event.param.buildanchor"/>

                    <update_mission cue="$MissionCue">
                      <briefing>
                        <objective step="1" action="objective.escort" text="$TextTable.$objectivetext"/>
                      </briefing>
                    </update_mission>
                    <signal_cue cue="UpdateBriefing"/>
                  </actions>
                </cue>
              </cues>
            </cue>
          </cues>
        </cue>


        <cue name="UpdateBriefing" instantiate="true" comment="Called each time a briefing-update is needed">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>

            <do_if value="$UpdateBriefing">
              <update_mission cue="$MissionCue">
                <briefing>
                  <objective step="$StartStep" action="objective.escort" text="$Text_Objective"/>
                </briefing>
              </update_mission>
              <do_if value="$ArrivalCount == 1">
                <set_objective cue="$MissionCue" step="$StartStep" action="objective.escort" text="$Text_Objective"/>
              </do_if>
              <do_else>
                <set_objective cue="$MissionCue" step="$StartStep" action="objective.escort" text="$Text_Objective">
                  <progress progress="$ArrivalCountDone" max="$ArrivalCount" text="{30004,1800}"/>
                </set_objective>
              </do_else>
            </do_if>

          </actions>
        </cue>

        <cue name="Cleanup">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <!--TODO remove_objective-->

            <do_if value="$feedbackvalue" exact="0">
              <do_if value="$ErrorList.count" exact="0">
                <debug_text text="'ERROR: Feedback value is 0 and no error values were set. Defaulting to -100'"/>
                <set_value name="$feedbackvalue" exact="-100"/>
              </do_if>
              <do_else>
                <set_value name="$feedbackvalue" exact="$ErrorList.{1}"/>

                <do_if value="md.$RML_Debugging">
                  <do_all exact="$ErrorList.count" counter="$Counter">
                    <do_if value="$ErrorList.{$Counter}" exact="-103">
                      <set_value name="$FeedbackText" exact="'$TargetSpec parameter left undefined'"/>
                    </do_if>
                    <do_elseif value="$ErrorList.{$Counter}" exact="-101">
                      <set_value name="$FeedbackText" exact="'Cue parameters not defined'"/>
                    </do_elseif>
                    <do_elseif value="$ErrorList.{$Counter}" exact="-100">
                      <set_value name="$FeedbackText" exact="'Undefined failure. Defaulted to -100'"/>
                    </do_elseif>
                    <do_else>
                      <set_value name="$FeedbackText" exact="'Error: Unknown error value'"/>
                    </do_else>

                    <debug_text text="'Mission Error. Feedback id: ' + $ErrorList.{$Counter} + ' - ' + $FeedbackText" filter="error"/>
                  </do_all>
                </do_if>
              </do_else>
            </do_if>
            <do_else>

              <do_if value="$feedbackvalue" exact="1">
                <set_value name="$FeedbackText" exact="'Targets escorted'"/>
              </do_if>

              <do_if value="$feedbackvalue" min="1">
                <debug_text text="'Mission Successful. Feedback id: ' + $feedbackvalue + ' - ' + $FeedbackText" chance="md.$RML_Debugging * $DebugChance"/>
              </do_if>
              <do_elseif value="@$FeedbackText">
                <set_value name="$EndSignalCue.$EndFeedbackText" exact="$FeedbackText"/>
                <debug_text text="'Mission Failed. Feedback id: ' + $feedbackvalue + ' - ' + $FeedbackText" chance="md.$RML_Debugging * $DebugChance"/>
              </do_elseif>
              <do_else>
                <debug_text text="'WARNING: Unhandled feedback value ' + $feedbackvalue" chance="$DebugChance"/>
              </do_else>

            </do_else>

            <set_value name="$EndSignalCue.$FinalStep" exact="$StartStep" chance="if $EndSignalCue.$FinalStep? then 0 else 100" comment="UpdateBriefing can overide"/>
            <set_value name="$EndSignalCue.$EndFeedbackValue" exact="$feedbackvalue"/>
            <signal_cue cue="$EndSignalCue"/>
            <cancel_cue cue="EscortAmbiguous"/>
          </actions>
        </cue>
      </cues>
    </library>
  </cues>
</mdscript>
