<?xml version="1.0" encoding="utf-8"?>
<mdscript name="RML_Deploy_In_Sectors" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="md.xsd">
  <cues>

    <!--
    WARNING: This RML is currently used to by upkeep missions for deploying a single resource probe in any sector of the mining operations area.
    It does not currently support the deployment of multiple objects.-->

    <!--######## IMPORTANT #######
    If a new deployablecategory is added, the matching event must be added to the conditions of CheckMissionStatus_add
    ##########################-->

    <!--$feedbackvalue:
    -103 $DeployableCategory left undefined
    -102 $TargetSector left undefined
    -101 Cue parameters not defined
    -100: Undefined failure. Defaulted to -100
    1: Suitable objects deployed -->

    <library name="DeployInSectors">
      <params>
        <param name="EndSignalCue"/>
        <param name="MissionCue"/>
        <param name="StartStep"                       default="1" comment="Briefing step to start the mission on"/>
        <param name="UpdateBriefing"                  default="true" comment="Update the briefing objective step when the objective is updated"/>
        <param name="DebugChance"                     default="0" />

        <param name="ObjectiveText"                   comment="Text for the deploy objective, e.g. 'Resource probe in operational area'"/>
        <param name="TargetSpaces"                    comment="Check for deployment in ANY of the targetspaces"/>
        <param name="DeployableCategory"              comment="e.g. deployablecategory.lasertower, or deployablecategory.mine"/>
      </params>
      <actions>
        <set_value name="$feedbackvalue" exact="0"/>
        <create_list name="$ErrorList"/>

        <do_if value="not $EndSignalCue or not $MissionCue">
          <append_to_list name="$ErrorList" exact="-101"/>
        </do_if>
        <do_if value="$TargetSpaces.count == 0">
          <append_to_list name="$ErrorList" exact="-102"/>
        </do_if>
        <do_if value="not $DeployableCategory">
          <append_to_list name="$ErrorList" exact="-103"/>
        </do_if>

      </actions>
      <cues>

        <cue name="Signal_Cleanup" onfail="cancel">
          <conditions>
            <check_value value="$ErrorList.count" min="1"/>
          </conditions>
          <actions>
            <signal_cue cue="Cleanup"/>
          </actions>
        </cue>

        <library name="Check_Spaces">
          <actions>
            <!--Check if any suitable objects already exist in the target spaces-->
            <!--TODO @Owen allow 'space' to be a group-->
            <find_object name="$ExistingObject" space="$TargetSpaces.list" state="componentstate.operational" deployablecategory="$DeployableCategory" owner="faction.player"/>

            <do_if value="$ExistingObject">
              <!--Mission already achieved.-->
              <set_value name="$feedbackvalue" exact="1"/>
              <signal_cue cue="Cleanup"/>
            </do_if>
            <do_else>
              <set_objective cue="$MissionCue" step="$StartStep" action="objective.deploy" text="$ObjectiveText"/>
            </do_else>
          </actions>
        </library>

        <cue name="StartMission" onfail="cancel">
          <conditions>
            <check_value value="$ErrorList.count" min="0"/>
          </conditions>
          <actions>
            <do_if value="$UpdateBriefing">
              <update_mission cue="$MissionCue">
                <briefing>
                  <objective step="$StartStep" action="objective.deploy" text="$ObjectiveText"/>
                </briefing>
              </update_mission>
            </do_if>

            <include_actions ref="Check_Spaces"/>
          </actions>
          <cues>

            <cue name="SpacesUpdated" instantiate="true">
              <conditions>
                <event_cue_signalled cue="namespace"/>
                <check_value value="event.param == 'update_spaces'"/>
              </conditions>
              <actions>
                <include_actions ref="Check_Spaces"/>
              </actions>
            </cue>

            <cue name="ObjectDeployed" instantiate="true">
              <conditions>
                <check_any>
                  <event_lasertower_launched group="$TargetSpaces"/>
                  <event_mine_launched group="$TargetSpaces"/>
                  <event_navbeacon_launched group="$TargetSpaces"/>
                  <event_resourceprobe_launched group="$TargetSpaces"/>
                  <event_satellite_launched group="$TargetSpaces"/>
                </check_any>
                <check_value value="event.param2.deployablecategory == $DeployableCategory and event.param2.isplayerowned"/>
              </conditions>
              <actions>
                <debug_text text="'Something suitable was deployed'" chance="$DebugChance"/>

                <set_value name="$feedbackvalue" exact="1"/>
                <signal_cue cue="Cleanup"/>
              </actions>
            </cue>
          </cues>
        </cue>

        <cue name="Cleanup">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <!--TODO remove_objective-->

            <do_if value="$feedbackvalue" exact="0">
              <do_if value="$ErrorList.count" exact="0">
                <debug_text text="'ERROR: Feedback value is 0 and no error values were set. Defaulting to -100'"/>
                <set_value name="$feedbackvalue" exact="-100"/>
              </do_if>
              <do_else>
                <set_value name="$feedbackvalue" exact="$ErrorList.{1}"/>

                <do_if value="md.$RML_Debugging">
                  <do_all exact="$ErrorList.count" counter="$Counter">
                    <do_if value="$ErrorList.{$Counter}" exact="-103">
                      <set_value name="$FeedbackText" exact="'$DeployableCategory parameter left undefined'"/>
                    </do_if>
                    <do_elseif value="$ErrorList.{$Counter}" exact="-102">
                      <set_value name="$FeedbackText" exact="'$TargetSpaces parameter left undefined'"/>
                    </do_elseif>
                    <do_elseif value="$ErrorList.{$Counter}" exact="-101">
                      <set_value name="$FeedbackText" exact="'Cue parameters not defined'"/>
                    </do_elseif>
                    <do_elseif value="$ErrorList.{$Counter}" exact="-100">
                      <set_value name="$FeedbackText" exact="'Undefined failure. Defaulted to -100'"/>
                    </do_elseif>
                    <do_else>
                      <set_value name="$FeedbackText" exact="'Error: Unknown error value'"/>
                    </do_else>

                    <debug_text text="'Mission Error. Feedback id: ' + $ErrorList.{$Counter} + ' - ' + $FeedbackText" filter="error"/>


                  </do_all>
                </do_if>
              </do_else>
            </do_if>
            <do_else>

              <do_if value="$feedbackvalue" exact="1">
                <set_value name="$FeedbackText" exact="'DeployInSectors success'"/>
              </do_if>

              <do_if value="$feedbackvalue" min="1">
                <debug_text text="'Mission Successful. Feedback id: ' + $feedbackvalue + ' - ' + $FeedbackText" chance="md.$RML_Debugging * $DebugChance"/>
              </do_if>
              <do_elseif value="@$FeedbackText">
                <set_value name="$EndSignalCue.$EndFeedbackText" exact="$FeedbackText"/>
                <debug_text text="'Mission Failed. Feedback id: ' + $feedbackvalue + ' - ' + $FeedbackText" chance="md.$RML_Debugging * $DebugChance"/>
              </do_elseif>
              <do_else>
                <debug_text text="'WARNING: Unhandled feedback value ' + $feedbackvalue" chance="$DebugChance"/>
              </do_else>

            </do_else>

            <set_value name="$EndSignalCue.$FinalStep" exact="$StartStep" chance="if $EndSignalCue.$FinalStep? then 0 else 100" comment="UpdateBriefing can overide"/>
            <set_value name="$EndSignalCue.$EndFeedbackValue" exact="$feedbackvalue"/>
            <signal_cue cue="$EndSignalCue"/>
            <cancel_cue cue="DeployInSectors"/>
          </actions>
        </cue>
      </cues>
    </library>
  </cues>
</mdscript>
