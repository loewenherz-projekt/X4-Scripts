<?xml version="1.0" encoding="utf-8"?>
<mdscript name="GMC_MadScientist" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="md.xsd">
  <cues>

    <!--
    One single mission giver in the game. spawning on a random wharf (so players can at least search for him a bit easier). 
    he needs X parts of Wares1-5 which only drop from capital ships, so he can build an experimental ship computer. 
    he doesn't need all the wares always, and the amounts but also the reward increase every time you do the missionall the experiments fail obviously, so he always needs more parts. 
    Maybe even start with just 1 item, then 2, then 3, then ... in the end 5 of each or more. 
    so this mission could scale a bit with players power or at least catch up to him after a while. 
    Text for this mission is found on page page id="30233", with offset 0-9999 for the mad scientist, offset 10000-19999 for the mad artist.
    -->

    <cue name="StartInstances" mapeditor="false" version="2">
      <conditions>
        <event_cue_signalled cue="md.Setup.Start"/>
        <check_value value="player.galaxy.macro == macro.xu_ep2_universe_macro" comment="only in main-galaxy"/>
      </conditions>
      <actions>
        <set_value name="$DebugChance" exact="0"/>
        <find_sector name="$BaseSectors" extension="''" multiple="true"/>
      </actions>
      <patch sinceversion="2">
        <do_for_each name="$Patch_Sector" in="$BaseSectors" reverse="true" counter="$patch_i">
          <do_if value="not $Patch_Sector or not @$Patch_Sector.cluster.isnormalcluster">
            <debug_text text="'Removing sector ' + $Patch_Sector + ' ' + @$Patch_Sector.knownname + ' from list of base sectors'" filter="savegame"/>
            <remove_value name="$BaseSectors.{$patch_i}"/>
          </do_if>
        </do_for_each>
      </patch>
      <cues>
        <cue name="GMC_MadScientist_Ref" ref="md.GMC_MadScientist.Start" comment="Mad scientist variation">
          <param name="Page"            value="30233"/>
          <param name="VoicePage"       value="10187" comment="Mad Scientist (female)"/>
          <param name="TextOffset"      value="0" comment="textrange 0-9999"/>
          <param name="StationType"     value="1" comment="wharf"/>
          <param name="StationOwner"    value="[faction.teladi, faction.ministry]" />
          <param name="StationSpace"    value="$BaseSectors" />
          <param name="MadNpcMacro"     value="macro.character_mad_scientist_macro" />
          <param name="RoomName"        value="readtext.{20007}.{1241}" comment="Private Apartment"/>
          <param name="RoomTags"        value="[tag.livingroom, tag.shady]"/>
          <param name="SlotNames"       value="['con_npc_stand_01', 'con_npc_sit_02']"/>
          <param name="TrophyTag"       value="tag.trophy_gen_xenon_i"/>
          <param name="BriefingIcon"    value="'briefing_corin_king_01'"/>
          <param name="MissionType"     value="1"/>
          <param name="DebugChance"     value="$DebugChance"/>
        </cue>
        <cue name="GMC_MadArtist_Ref" ref="md.GMC_MadScientist.Start" comment="Mad artist variation">
          <param name="Page"            value="30233"/>
          <param name="VoicePage"       value="10181" comment="Mad Artist"/>
          <param name="TextOffset"      value="10000" comment="textrange 10000-19999"/>
          <param name="StationType"     value="2"/>
          <param name="StationOwner"    value="[faction.paranid, faction.trinity]" comment="trinity, in case player chose paranid unification" />
          <param name="StationSpace"    value="$BaseSectors" />
          <param name="MadNpcMacro"     value="macro.character_mad_artist_macro" />
          <param name="RoomName"        value="readtext.{20007}.{1241}" comment="Private Apartment"/>
          <param name="RoomTags"        value="[tag.livingroom, tag.generic]"/>
          <param name="SlotNames"       value="['con_npc_stand_01', 'con_npc_sit_01', 'con_npc_sit_02']"/>
          <param name="TrophyTag"       value="tag.trophy_gmc_madscientist_sculpture"/>
          <param name="BriefingIcon"    value="'briefing_arthur_gimmick_01'"/>
          <param name="MissionType"     value="2"/>
          <param name="DebugChance"     value="$DebugChance"/>
        </cue>
        <cue name="GMC_MadProducer_Ref" ref="md.GMC_MadScientist.Start" comment="Mad producer variation">
          <param name="Page"            value="30233"/>
          <param name="VoicePage"       value="10176"/>
          <param name="TextOffset"      value="20000" comment="textrange 20000-29999"/>
          <param name="StationType"     value="2"/>
          <param name="StationOwner"    value="[faction.argon]" />
          <param name="StationSpace"    value="$BaseSectors" />
          <param name="MadNpcMacro"     value="macro.character_mad_producer_macro" />
          <param name="RoomName"        value="readtext.{20007}.{1551}" comment="Common Room"/>
          <param name="RoomTags"        value="[tag.crewquarters]"/>
          <param name="SlotNames"       value="['con_npc_stand_01', 'con_npc_stand_02']"/>
          <param name="PrivateRoom"     value="false"/>
          <param name="TrophyTag"       value="tag.trophy_gmc_madscientist_whiteboard"/>
          <param name="BriefingIcon"    value="'briefing_keter_pullgard_01'"/>
          <param name="MissionType"     value="3"/>
          <param name="DebugChance"     value="$DebugChance"/>
        </cue>
      </cues>
    </cue>

    <library name="Start" version="2">
      <params>
        <!-- Generic Parameters -->
        <param name="Page"          comment="Allows a different text page to be used instead of the generic one. Text IDs must be mapped similarly."/>
        <param name="VoicePage"     comment="Allows a different text page to be used instead of the generic one. Text IDs must be mapped similarly."/>
        <param name="TextOffset"    comment="The text offset for this variant's text on the page. The entries[] within that offset have to match for all variants."/>
        <param name="StationType"   comment="select station, where 1=wharf/shipyard 2=tradestation 3=any station of specified stationowner-faction"/>
        <param name="StationOwner"  comment="select station matching this list of factions" />
        <param name="StationSpace"  comment="select station inside these sectors" />
        <param name="MadNpcMacro"   comment="macro specifying the mad npc"/>
        <param name="RoomTags"      default="[tag.office]"/>
        <param name="RoomName"      comment="Name of the room (always an office) in which the npc is"/>
        <param name="SlotTags"      default="[tag.npc_generic]" comment="alternatives: tag.sit, tag.stand"/>
        <param name="SlotNames"     default="[]"/>
        <param name="PrivateRoom"   default="true"/>
        <param name="TrophyTag"     default="null"/>
        <param name="BriefingIcon"  default="''"/>
        <param name="MissionType"   comment="mission variations, where 1=Mad scientist related 2=Artist related"/>
        <param name="DebugChance"   default="0"/>
      </params>
      <actions>
        <debug_text text="'Starting Madscientist page=%s voicepage=%s offset=%s'.[$Page, $VoicePage, $TextOffset]" chance="$DebugChance"/>
        <!--debug_text text="'Mad scientist launcher'"/-->
        <set_value name="$MissionCue" exact="Start"/>
        <set_value name="$MissionActive" exact="false"/>
        <set_value name="$MissionCompletedCount" exact="0"/>
        <set_value name="$DebugChance" exact="0"/>
        <set_value name="$DeepDebugChance" exact="0"/>
        <set_value name="$SelectedStation" exact="null"/>
      </actions>
      <patch sinceversion="2">
        <do_if value="$MadNpcMacro == macro.character_mad_scientist_macro">
          <set_value name="$BriefingIcon" exact="'briefing_corin_king_01'"/>
        </do_if>
        <do_elseif value="$MadNpcMacro == macro.character_mad_artist_macro">
          <set_value name="$BriefingIcon" exact="'briefing_arthur_gimmick_01'"/>
        </do_elseif>
        <do_elseif value="$MadNpcMacro == macro.character_mad_producer_macro">
          <set_value name="$BriefingIcon" exact="'briefing_keter_pullgard_01'"/>
        </do_elseif>
      </patch>
      <cues>

        <cue name="SetupActor">
          <actions>
            <create_cue_actor name="$MadScientist" cue="$MissionCue" macro="$MadNpcMacro">
              <owner exact="faction.civilian"/>
              <name name="'{%s,%s}'.[$Page, $TextOffset + 2]"/>
              <page exact="$VoicePage" comment="voice for missionpage 30233 (voicepage can be different, per variation)"/>
              <skills>
                <skill type="morale" exact="8"/>
                <skill type="engineering" exact="10"/>
                <skill type="management" exact="14"/>
              </skills>
            </create_cue_actor>
            <set_entity_type entity="$MadScientist" type="entitytype.crowd"/>
            <set_entity_traits entity="$MadScientist" missionactor="true" customhandler="true" />
            <signal_cue cue="ActorConversation"/>
          </actions>
        </cue>

        <cue name="ActorConversation">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <cues>

            <library name="MadScientist_Conversation_DefaultChoices">
              <actions>
                <add_player_choice text="readtext.{$Page}.{$TextOffset + 401}" section="default" choiceparam="'choice_research'" />
                <add_player_choice text="readtext.{$Page}.{$TextOffset + 402}" section="default" choiceparam="'choice_progress'" />
                <do_if value="$MissionCue.hasmissionoffer">
                  <add_player_choice text="readtext.{$Page}.{$TextOffset + 403}" section="default" choiceparam="'choice_help'" position="top_right"/>
                </do_if>
                <add_player_choice text="readtext.{$Page}.{$TextOffset + 404}" section="madscientist_main" choiceparam="'leave'" position="bottom_right" highlighted="true"/>
              </actions>
            </library>

            <cue name="MadScientist_Signalled" instantiate="true">
              <conditions>
                <!--event_object_signalled object="$MadScientist" param="'accept'" param2="$MissionCue"/-->
                <event_object_signalled object="$MadScientist" />
              </conditions>
              <actions>
                <debug_text text="'MadScientist signalled: ' + event.object + ' ' + event.param + ' ' + event.param2" chance="$DebugChance"/>
              </actions>
            </cue>

            <cue name="MadScientist_Conversation_Start" instantiate="true">
              <conditions>
                <check_any>
                  <event_conversation_started actor="$MadScientist"/>
                  <event_conversation_next_section actor="$MadScientist" section="madscientist_main"/>
                  <event_conversation_next_section actor="$MadScientist" section="default"/>
                  <!--event_conversation_next_section actor="$MadScientist" choiceparam="$MissionCue" /-->
                </check_any>
              </conditions>
              <actions>
                <!--debug_text text="'e.p=%s e.p2=%s'.[event.param, event.param2]"/-->
                <do_if value="event.param == 'madscientist_main' or event.param == 'default'">
                  <do_if value="event.name == 'event_conversation_started'">
                    <do_if value="not $Introduced?">
                      <add_npc_line speaker="$MadScientist" line="$TextOffset + 301" hidechoices="true"/>
                      <add_player_choice text="readtext.{$Page}.{$TextOffset + 405}" section="madscientist_main" choiceparam="'choice_introduce'" />
                      <add_player_choice text="readtext.{$Page}.{$TextOffset + 404}" section="madscientist_main" choiceparam="'leave'" position="bottom_right" highlighted="true"/>
                    </do_if>
                    <do_else>
                      <include_actions ref="MadScientist_Conversation_DefaultChoices"/>
                    </do_else>
                  </do_if>
                  <do_elseif value="event.param2 == $MissionCue">
                    <include_actions ref="MadScientist_Conversation_DefaultChoices"/>
                  </do_elseif>
                  <do_elseif value="event.param2 == 'choice_introduce'">
                    <add_npc_line speaker="$MadScientist" line="$TextOffset + 302" hidechoices="true"/>
                    <set_value name="$Introduced" exact="true"/>
                    <include_actions ref="MadScientist_Conversation_DefaultChoices"/>
                  </do_elseif>
                  <do_elseif value="event.param2 == 'choice_progress'" comment="or already introduced (skipping introduction)">
                    <do_if value="(not $MissionCue.hasmissionoffer) and (not $MissionCue.hasmission)" comment="no mission offered/active">
                      <do_if value="$MissionCompletedCount == 0">
                        <add_npc_line speaker="$MadScientist" line="$TextOffset + 306" hidechoices="true"/>
                      </do_if>
                      <do_else>
                        <add_npc_line speaker="$MadScientist" line="$TextOffset + 304" hidechoices="true"/>
                      </do_else>
                    </do_if>
                    <do_elseif value="$MissionCue.hasmissionoffer">
                      <do_if value="$MissionCompletedCount == 0">
                        <add_npc_line speaker="$MadScientist" line="$TextOffset + 307" hidechoices="true"/>
                      </do_if>
                      <do_else>
                        <add_npc_line speaker="$MadScientist" line="$TextOffset + 310 + $MissionCompletedCount % 2" hidechoices="true" comment="either line 310 or 311 (consistent, depending on the missioncompletedcount)"/>
                      </do_else>
                    </do_elseif>
                    <do_elseif value="$MissionCue.hasmission">
                      <add_npc_line speaker="$MadScientist" line="$TextOffset + 305" hidechoices="true"/>
                    </do_elseif>
                    <do_else>
                      <debug_text text="'fallthrough 1'" chance="$DebugChance"/>
                    </do_else>
                    <include_actions ref="MadScientist_Conversation_DefaultChoices"/>
                  </do_elseif>
                  <do_elseif value="event.param2 == 'choice_research'">
                    <add_npc_line speaker="$MadScientist" line="$TextOffset + 303" hidechoices="true"/>
                    <include_actions ref="MadScientist_Conversation_DefaultChoices"/>
                  </do_elseif>
                  <do_elseif value="event.param2 == 'choice_help'">
                    <open_conversation_menu menu="MissionBriefingMenu" param="[0, 0, $MissionCue, true]" comment="important that the Client/$MadScientist was passed into the GM!"/>
                    <!-- not adding playerchoices since they overlap into the briefing screen -->
                  </do_elseif>
                  <do_else>
                    <debug_text text="'fallthrough2'" chance="$DebugChance"/>
                  </do_else>
                </do_if>
                <do_elseif value="event.name == 'event_conversation_returned_to_section'">
                  <include_actions ref="MadScientist_Conversation_DefaultChoices"/>
                </do_elseif>
                <do_else>
                  <debug_text text="'fallthrough 3'" chance="$DebugChance"/>
                </do_else>
              </actions>
              <cues>
                <cue name="MissionAccepted">
                  <conditions>
                    <check_any>
                      <event_conversation_returned_to_section actor="$MadScientist" section="g_finish" comment="handle 'accept/reject' in briefing" />
                    </check_any>
                  </conditions>
                  <actions>
                    <!-- cancel conversation to avoid the player trying to accept the mission twice-->
                    <cancel_conversation actor="$MadScientist"/>
                  </actions>
                </cue>
              </cues>
            </cue>

          </cues>
        </cue>


        <cue name="FindStation">
          <actions>
            <do_if value="$StationType == 1">
              <do_any comment="can't find_station being both a wharf and shipyard at the same time, so randomly pick what to look for this time (wharf or shipyard)">
                <do_all>
                  <set_value name="$wharf" exact="true"/>
                  <set_value name="$shipyard" exact="false"/>
                </do_all>
                <do_all>
                  <set_value name="$wharf" exact="false"/>
                  <set_value name="$shipyard" exact="true"/>
                </do_all>
              </do_any>
              <find_station name="$SelectedStation" space="$StationSpace" owner="$StationOwner" canhavedynamicinterior="true" wharf="$wharf" shipyard="$shipyard"/>
            </do_if>
            <do_elseif value="$StationType == 2">
              <find_station name="$SelectedStation" space="$StationSpace" owner="$StationOwner" canhavedynamicinterior="true" tradestation="true"/>
            </do_elseif>
            <do_elseif value="$StationType == 3">
              <find_station name="$SelectedStation" space="$StationSpace" owner="$StationOwner" canhavedynamicinterior="true"/>
            </do_elseif>
            <do_else>
              <assert value="false" comment="unexpected value"/>
            </do_else>

            <do_if value="$SelectedStation">
              <debug_text text="'Selecting station %s in %s.'.[$SelectedStation.knownname, $SelectedStation.sector.knownname]" chance="$DebugChance"/>

              <!-- create room with mad scientist npc-->
              <get_room_definition macro="$CorridorMacro" doors="$ResultDoors" race="$SelectedStation.owner.primaryrace" tags="tag.corridor"/>
              <get_room_definition macro="$RoomMacro" tags="$RoomTags" />
              <set_value name="$InteriorName" exact="$RoomName"/>
              <do_if value="($RoomMacro != null) and ($CorridorMacro != null)">
                <create_dynamic_interior roomname="$ResultRoom" object="$SelectedStation" name="$InteriorName" corridor="$CorridorMacro" room="$RoomMacro" corridorname="$ResultCorridorName" interiorname="$ResultInteriorName" persistent="true" private="$PrivateRoom"/>
                <do_if value="$ResultRoom.exists">
                  <!-- if specific slots are supplied, check if they exist -->
                  <do_if value="$SlotNames.count">
                    <find_npc_slot name="$AllSlots" excludefilled="false" object="$ResultRoom" multiple="true"/>
                    <create_list name="$ResultSlots"/>
                    <do_for_each in="$AllSlots" name="$Slot">
                      <do_if value="$SlotNames.indexof.{$Slot.name}">
                        <append_to_list name="$ResultSlots" exact="$Slot"/>
                      </do_if>
                    </do_for_each>
                    <!-- failsafe -->
                    <do_if value="not $ResultSlots.count">
                      <set_value name="$ResultSlots" exact="$AllSlots"/>
                    </do_if>
                  </do_if>
                  <!-- create npc -->
                  <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $MadScientist, 
                      table[
                        $requestercue = $MissionCue,
                        $priority = 100,
                        $location = if $ResultSlots? then $ResultSlots.random else $ResultRoom,
                        $slottags = if $ResultSlots? then null else [$SlotTags],
                        $debugchance = $DeepDebugChance,
                        $debugcaller = if $DebugChance == 100 then this else null]
                      ]"/>
                  <do_if value="not $MadScientist.room.exists">
                    <debug_text text="'NPC not spawned %s (missing npcslot?)'.[$MadNpcMacro]"/>
                  </do_if>
                </do_if>
                <do_else>
                  <set_value name="$SelectedStation" exact="null" comment="station not valid, retry next time"/>
                </do_else>
              </do_if>
              <do_else>
                <debug_text text="'No room/corridors found! (RoomTags=%s RoomMacro=%s CorridorMacro=%s)'.[$RoomTags, $RoomMacro, $CorridorMacro]"/>
              </do_else>
            </do_if>
            <do_else>
              <debug_text text="'No suitable station found'" chance="$DebugChance"/>
            </do_else>
          </actions>
          <cues>
            <cue name="FindStation_Retry" onfail="cancel">
              <conditions>
                <check_value value="(not $SelectedStation.exists) or (not $MadScientist.room.exists)"/>
              </conditions>
              <actions>
                <debug_text text="'MadScientist retry timer started'" chance="$DebugChance"/>
              </actions>
              <delay min="if player.debug then 30s else 1500s" max="if player.debug then 60s else 3000s"/>
              <actions>
                <reset_cue cue="FindStation"/>
              </actions>
            </cue>
            <cue name="FindStation_Found" onfail="cancel">
              <conditions>
                <check_value value="$SelectedStation.exists and $MadScientist.room.exists"/>
              </conditions>
              <cues>
                <!-- This re-runs whenever the player enters the floor the room is on, sometimes moving the actor to a new NPC slot to make them feel more alive. -->
                <cue name="FindStation_PlaceActor_v2" instantiate="true">
                  <conditions>
                    <event_object_changed_room object="player.entity" room="$ResultCorridorName"/>
                    <check_value value="event.param2 != $ResultRoom" comment="Don't make the actor move when the player leaves, otherwise the player could keep shuffling over the doorstep and cause problems."/>
                    <check_value value="$PrivateRoom" comment="If there are other NPCs in the room, moving the mission NPC could result in double occupation of a slot."/>
                  </conditions>
                  <actions>
                    <signal_cue_instantly cue="md.NPC_Instantiation.NPC_Placement_Manager" param="['add_definition', $MadScientist, 
                    table[
                      $requestercue = $MissionCue,
                      $priority = 100,
                      $location = if $ResultSlots? then $ResultSlots.random else $ResultRoom,
                      $slottags = if $ResultSlots? then null else [$SlotTags],
                      $debugchance = $DeepDebugChance,
                      $debugcaller = if $DebugChance == 100 then this else null]
                    ]"/>
                  </actions>
                </cue>
                <cue name="MadScientistKilled">
                  <conditions>
                    <event_object_destroyed object="$MadScientist"/>
                  </conditions>
                  <delay exact="60s"/>
                  <actions>
                    <!-- The NPC standing in the room IS the cue-actor, but cue actors have an MD-reference preventing them from being cleaned up by the engine, which means we can place 'killed' NPCs back in the universe after destruction. -->
                    <debug_text text="'MadScientist killed, reset respawn-cue'" chance="$DebugChance"/>
                    <reset_cue cue="FindStation"/>
                  </actions>
                </cue>
              </cues>
            </cue>
          </cues>
        </cue>

        <cue name="TriggerPeriodicCheck" checkinterval="1500s" instantiate="true">
          <conditions>
            <check_value value="(TriggerMission.state == cuestate.waiting) and $SelectedStation.exists"/>
          </conditions>
          <actions>
            <signal_cue cue="TriggerMission"/>
          </actions>
        </cue>

        <cue name="TriggerMission">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <!-- Mad Scientist missions -->
            <do_if value="$MissionType == 1">
              <!-- Bonus Reward 10% + 1% per time the mission type was played (25% max) -->
              <set_value name="$Bonus" exact="(110 + if ($MissionCompletedCount lt 25) then ($MissionCompletedCount) else (25))"/>
              <do_if value="$MissionCompletedCount == 0">
                <set_value name="$DeliveryItem" exact="[ware.inv_processing_panel_7A].random" comment="Processing Panel Unit 7A"/>
                <set_value name="$DeliveryAmount" exact="2"/>
                <set_value name="$TextOffsetGM" exact="$TextOffset + 1000"/>
                <set_value name="$DeliveryRewardObj" exact="null"/>
                <set_value name="$DeliveryRewardObjName" exact="null"/>
                <set_value name="$MissionMultiplier" exact="3"/>
              </do_if>
              <do_else>
                <do_any>
                  <do_all weight="(if ($MissionCompletedCount le 2) then (75) else (20 - $MissionCompletedCount))">
                    <set_value name="$DeliveryItem" exact="[ware.inv_processing_panel_7A, ware.inv_processing_panel_46B].random" comment="Processing Panel Unit 7A, Processing Panel Unit 46B"/>
                    <set_value name="$DeliveryAmount" exact="5"/>
                    <set_value name="$TextOffsetGM" exact="$TextOffset + 2000"/>
                    <set_value name="$DeliveryRewardObj" exact="null"/>
                    <set_value name="$DeliveryRewardObjName" exact="null"/>
                    <set_value name="$MissionMultiplier" exact="4"/>
                  </do_all>
                  <do_all weight="(if ($MissionCompletedCount ge 3) and ($MissionCompletedCount le 5) then (75) else (30 - $MissionCompletedCount))">
                    <set_value name="$DeliveryItem" exact="[ware.inv_processing_panel_46B, ware.inv_processing_panel_8X].random" comment="Processing Panel Unit 46B, Processing Panel Unit 8X"/>
                    <set_value name="$DeliveryAmount" exact="10"/>
                    <set_value name="$TextOffsetGM" exact="$TextOffset + 3000"/>
                    <do_any>
                      <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_piloting_2].random" weight="10"/>
                      <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_management_2].random" weight="5"/>
                    </do_any>
                    <set_value name="$DeliveryRewardObjName" exact="$DeliveryRewardObj.name"/>
                    <set_value name="$MissionMultiplier" exact="2"/>
                  </do_all>
                  <do_all weight="(if ($MissionCompletedCount ge 6) and ($MissionCompletedCount le 8) then (75) else (20 + $MissionCompletedCount))">
                    <set_value name="$DeliveryItem" exact="[ware.inv_processing_panel_19L, ware.inv_processing_panel_8X].random" comment="Processing Panel Unit 19L, Processing Panel Unit 8X"/>
                    <set_value name="$DeliveryAmount" exact="15"/>
                    <set_value name="$TextOffsetGM" exact="$TextOffset + 4000"/>
                    <do_any>
                      <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_piloting_2].random" weight="30"/>
                      <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_management_2].random" weight="20"/>
                      <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_piloting_3].random" weight="10"/>
                      <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_management_3].random" weight="5"/>
                    </do_any>
                    <set_value name="$DeliveryRewardObjName" exact="$DeliveryRewardObj.name"/>
                    <set_value name="$MissionMultiplier" exact="2"/>
                  </do_all>
                  <do_all weight="(if ($MissionCompletedCount ge 9) then (50 + $MissionCompletedCount) else (10))">
                    <set_value name="$DeliveryItem" exact="[ware.inv_processing_panel_12G, ware.inv_processing_panel_19L].random" comment="Processing Panel Unit 12G, Processing Panel Unit 19L"/>
                    <set_value name="$DeliveryAmount" exact="[15, 20, 25].random"/>
                    <set_value name="$TextOffsetGM" exact="$TextOffset + [5000, 6000, 7000, 8000].random"/>
                    <do_if value="$DeliveryAmount" min="25">
                      <do_any>
                        <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_piloting_4].random" weight="10"/>
                        <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_management_4].random" weight="5"/>
                      </do_any>
                    </do_if>
                    <do_else>
                      <do_any>
                        <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_piloting_3].random" weight="30"/>
                        <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_management_3].random" weight="20"/>
                        <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_piloting_4].random" weight="10"/>
                        <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_management_4].random" weight="5"/>
                      </do_any>
                    </do_else>
                    <set_value name="$DeliveryRewardObjName" exact="$DeliveryRewardObj.name"/>
                    <set_value name="$MissionMultiplier" exact="2"/>
                  </do_all>
                </do_any>
              </do_else>
            </do_if>
            <!-- Mad Artist missions -->
            <do_elseif value="$MissionType == 2">
              <!-- Bonus Reward 10% + 1% per time the mission type was played (25% max) -->
              <set_value name="$Bonus" exact="(110 + if ($MissionCompletedCount lt 25) then ($MissionCompletedCount) else (25))"/>
              <do_if value="$MissionCompletedCount == 0">
                <set_value name="$DeliveryItem" exact="[ware.inv_majaglit].random" comment="Majaglit"/>
                <set_value name="$DeliveryAmount" exact="10"/>
                <set_value name="$TextOffsetGM" exact="$TextOffset + 1000"/>
                <set_value name="$DeliveryRewardObj" exact="null"/>
                <set_value name="$DeliveryRewardObjName" exact="null"/>
                <set_value name="$MissionMultiplier" exact="1"/>
              </do_if>
              <do_else>
                <do_any>
                  <do_all weight="(if ($MissionCompletedCount le 2) then (75) else (20 - $MissionCompletedCount))">
                    <set_value name="$DeliveryItem" exact="[ware.inv_unstablecrystal].random" comment="Unstable Crystal"/>
                    <set_value name="$DeliveryAmount" exact="[10, 20].random"/>
                    <set_value name="$TextOffsetGM" exact="$TextOffset + 2000"/>
                    <set_value name="$DeliveryRewardObj" exact="null"/>
                    <set_value name="$DeliveryRewardObjName" exact="null"/>
                    <set_value name="$MissionMultiplier" exact="1"/>
                  </do_all>
                  <do_all weight="(if ($MissionCompletedCount ge 3) and ($MissionCompletedCount le 5) then (75) else (30 - $MissionCompletedCount))">
                    <set_value name="$DeliveryItem" exact="[ware.inv_finemeal].random" comment="Fine Meal"/>
                    <set_value name="$DeliveryAmount" exact="[5, 10].random"/>
                    <set_value name="$TextOffsetGM" exact="$TextOffset + 3000"/>
                    <do_any>
                      <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_piloting_2].random" weight="10"/>
                      <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_management_2].random" weight="5"/>
                    </do_any>
                    <set_value name="$DeliveryRewardObjName" exact="$DeliveryRewardObj.name"/>
                    <set_value name="$MissionMultiplier" exact="1"/>
                  </do_all>
                  <do_all weight="(if ($MissionCompletedCount ge 6) and ($MissionCompletedCount le 8) then (75) else (20 + $MissionCompletedCount))">
                    <set_value name="$DeliveryItem" exact="[ware.inv_harddrug_01].random" comment="Delirium"/>
                    <set_value name="$DeliveryAmount" exact="[3, 5].random"/>
                    <set_value name="$TextOffsetGM" exact="$TextOffset + 4000"/>
                    <do_any>
                      <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_piloting_2].random" weight="30"/>
                      <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_management_2].random" weight="20"/>
                      <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_piloting_3].random" weight="10"/>
                      <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_management_3].random" weight="5"/>
                    </do_any>
                    <set_value name="$DeliveryRewardObjName" exact="$DeliveryRewardObj.name"/>
                    <set_value name="$MissionMultiplier" exact="1"/>
                  </do_all>
                  <do_all weight="(if ($MissionCompletedCount ge 9) then (50 + $MissionCompletedCount) else (10))">
                    <set_value name="$DeliveryItem" exact="[ware.inv_spaceflycaviar].random" comment="Spacefly Caviar"/>
                    <set_value name="$DeliveryAmount" exact="[2, 5, 10].random"/>
                    <set_value name="$TextOffsetGM" exact="$TextOffset + [5000, 6000, 7000, 8000].random"/>
                    <do_if value="$DeliveryAmount" min="10">
                      <do_any>
                        <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_piloting_4].random" weight="10"/>
                        <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_management_4].random" weight="5"/>
                      </do_any>
                    </do_if>
                    <do_else>
                      <do_any>
                        <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_piloting_3].random" weight="30"/>
                        <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_management_3].random" weight="20"/>
                        <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_piloting_4].random" weight="10"/>
                        <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_management_4].random" weight="5"/>
                      </do_any>
                    </do_else>
                    <set_value name="$DeliveryRewardObjName" exact="$DeliveryRewardObj.name"/>
                    <set_value name="$MissionMultiplier" exact="1"/>
                  </do_all>
                </do_any>
              </do_else>
            </do_elseif>
            <!-- Mad Producer missions -->
            <do_elseif value="$MissionType == 3">
              <!-- Bonus Reward 10% + 1% per time the mission type was played (25% max) -->
              <set_value name="$Bonus" exact="(110 + if ($MissionCompletedCount lt 25) then ($MissionCompletedCount) else (25))"/>
              <do_if value="$MissionCompletedCount == 0">
                <set_value name="$DeliveryItem" exact="[ware.inv_interfaceunit].random" comment="Interface Unit"/>
                <set_value name="$DeliveryAmount" exact="10"/>
                <set_value name="$TextOffsetGM" exact="$TextOffset + 1000"/>
                <set_value name="$DeliveryRewardObj" exact="null"/>
                <set_value name="$DeliveryRewardObjName" exact="null"/>
                <set_value name="$MissionMultiplier" exact="2"/>
              </do_if>
              <do_else>
                <do_any>
                  <do_all weight="(if ($MissionCompletedCount le 2) then (75) else (20 - $MissionCompletedCount))">
                    <set_value name="$DeliveryItem" exact="[ware.inv_interfaceunit, ware.inv_securecontainer].random" comment="Interface Unit, Secure Container"/>
                    <set_value name="$DeliveryAmount" exact="20"/>
                    <set_value name="$TextOffsetGM" exact="$TextOffset + 2000"/>
                    <set_value name="$DeliveryRewardObj" exact="null"/>
                    <set_value name="$DeliveryRewardObjName" exact="null"/>
                    <set_value name="$MissionMultiplier" exact="3"/>
                  </do_all>
                  <do_all weight="(if ($MissionCompletedCount ge 3) and ($MissionCompletedCount le 5) then (75) else (30 - $MissionCompletedCount))">
                    <set_value name="$DeliveryItem" exact="[ware.modpart_tuningsoftware, ware.modpart_extendedfuelcontainer].random" comment="Tuning Software, Extended Fuel Container"/>
                    <set_value name="$DeliveryAmount" exact="40"/>
                    <set_value name="$TextOffsetGM" exact="$TextOffset + 3000"/>
                    <do_any>
                      <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_piloting_2].random" weight="10"/>
                      <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_management_2].random" weight="5"/>
                    </do_any>
                    <set_value name="$DeliveryRewardObjName" exact="$DeliveryRewardObj.name"/>
                    <set_value name="$MissionMultiplier" exact="4242"/>
                  </do_all>
                  <do_all weight="(if ($MissionCompletedCount ge 6) and ($MissionCompletedCount le 8) then (75) else (20 + $MissionCompletedCount))">
                    <set_value name="$DeliveryItem" exact="[ware.inv_securityslicer, ware.inv_securitydecryptionsystem, ware.inv_securitybypasssystem].random" comment="Security Slicer, Security Decryption System, Security Bypass System"/>
                    <set_value name="$DeliveryAmount" exact="3"/>
                    <set_value name="$TextOffsetGM" exact="$TextOffset + 4000"/>
                    <do_any>
                      <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_piloting_2].random" weight="30"/>
                      <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_management_2].random" weight="20"/>
                      <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_piloting_3].random" weight="10"/>
                      <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_management_3].random" weight="5"/>
                    </do_any>
                    <set_value name="$DeliveryRewardObjName" exact="$DeliveryRewardObj.name"/>
                    <set_value name="$MissionMultiplier" exact="1"/>
                  </do_all>
                  <do_all weight="(if ($MissionCompletedCount ge 9) then (50 + $MissionCompletedCount) else (10))">
                    <set_value name="$DeliveryItem" exact="[ware.inv_securityslicer, ware.inv_securitydecryptionsystem, ware.inv_securitybypasssystem].random" comment="Security Slicer, Security Decryption System, Security Bypass System"/>
                    <set_value name="$DeliveryAmount" exact="[5, 10, 15].random"/>
                    <set_value name="$TextOffsetGM" exact="$TextOffset + [5000, 6000, 7000, 8000].random"/>
                    <do_if value="$DeliveryAmount" min="15">
                      <do_any>
                        <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_piloting_4].random" weight="10"/>
                        <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_management_4].random" weight="5"/>
                      </do_any>
                    </do_if>
                    <do_else>
                      <do_any>
                        <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_piloting_3].random" weight="30"/>
                        <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_management_3].random" weight="20"/>
                        <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_piloting_4].random" weight="10"/>
                        <set_value name="$DeliveryRewardObj" exact="[ware.inv_seminar_management_4].random" weight="5"/>
                      </do_any>
                    </do_else>
                    <set_value name="$DeliveryRewardObjName" exact="$DeliveryRewardObj.name"/>
                    <set_value name="$MissionMultiplier" exact="1"/>
                  </do_all>
                </do_any>
              </do_else>
            </do_elseif>
            <!-- Credits Reward -->
            <set_value name="$DeliveryRewardCr" exact="(25000Cr + ($DeliveryAmount * $DeliveryItem.averageprice * $MissionMultiplier * $Bonus / 100))"/>
          </actions>
          <cues>

            <!--cue name="MadScientist_CheatWare_DEBUG" onfail="cancel" comment="TODO: Better only when accepted the mission">
              <conditions>
                <check_value value="player.debug"/>
              </conditions>
              <actions>
                <debug_text text="'Cheating required %sx %s'.[$DeliveryAmount, $DeliveryItem.name]"/>
                <add_inventory entity="player.entity" ware="$DeliveryItem" exact="$DeliveryAmount"/>
              </actions>
            </cue-->

            <cue name="MadScientist_Ref" ref="md.GM_BringItems.Start" comment="1 instance at a time, reset when mission is ended for any reason (offer expired, mission completed, ...)">
              <param name="OfferObject"           value="$SelectedStation"/>
              <param name="MissionLevel"          value="1"/>
              <param name="Difficulty"            value="level.easy"/>
              <param name="MissionCue"            value="$MissionCue"/>
              <param name="Client"                value="$MadScientist"/>
              <param name="ClientOwner"           value="$MadScientist.owner"/>
              <!--Mission offer-->
              <param name="RemoveOnSectorChange"  value="@GenerateGenericMission.$RemoveOnSectorChange"/>
              <param name="BBSSpace"              value="$SelectedStation.sector"/>
              <!--Mission text-->
              <param name="Page"                  value="$Page"/>
              <param name="TextOffset"            value="$TextOffsetGM"/>
              <param name="VoiceTable"            value="table[$MissionAccepted = $TextOffset+[320,321].random, $MissionFailed = $TextOffset+[323,324].random, $MissionSuccess = $TextOffset+[326,327].random]" comment="silence"/>
              <!--Mission specific params-->
              <param name="DeliveryNPC"           value="$MadScientist" />
              <param name="DeliveryStation"       value="$SelectedStation" />
              <param name="DeliveryItem"          value="$DeliveryItem" />
              <param name="DeliveryAmount"        value="$DeliveryAmount" />
              <param name="OwnedAmount"           value="player.entity.inventory.{$DeliveryItem}.count"/>
              <param name="PlaceNPC"              value="false"/>
              <param name="BriefingIcon"          value="$BriefingIcon"/>
              <!--param name="PlaceNPC"              value="false"/>
              <param name="DeliveryRoomMacro"     value="$DeliveryRoomMacro" />
              <param name="DeliveryCorridorMacro" value="$DeliveryCorridorMacro" />
              <param name="DeliveryDoors"         value="$DeliveryDoors" />
              <param name="DeliveryInteriorName"  value="$DeliveryInteriorName" /-->
              <param name="RewardCr"              value="$DeliveryRewardCr"/>
              <param name="RewardObj"             value="$DeliveryRewardObj"/>
              <param name="RewardText"            value="$DeliveryRewardObjName"/>
              <param name="ReportSignalCue"       value="MadScientist_Report_Callback"/>
              <param name="DebugChance"           value="@GenerateGenericMission.$DebugChance"/>
            </cue>


            <!--Signalled by GM when an event happens e.g. mission successfully generated or mission ended.
            Feedback values saved to the static of this cue: $FeedbackValue and $EndFeedbackValue-->
            <cue name="MadScientist_Report_Callback" instantiate="true">
              <conditions>
                <event_cue_signalled/>
              </conditions>
              <actions>
                <do_if value="@static.$EndFeedbackValue" comment="Evaluate return-value of GM (success/failure)">
                  <debug_text text="'Mission ended. feedback' + static.$EndFeedbackValue" chance="$DebugChance"/>
                  <do_if value="static.$EndFeedbackValue.$ID" exact="'$MISSION_SUCCEEDED'" comment="see the $FeedbackValues table in the Generic Mission">
                    <set_value name="$MissionCompletedCount" operation="add"/>
                    <do_if value="$TrophyTag and not global.$Trophies.indexof.{$TrophyTag} and ($MissionCompletedCount ge 3)">
                      <signal_cue_instantly cue="md.X4Ep1_Mentor_Subscriptions.Add_Player_Office_Trophy" param="$TrophyTag"/>
                    </do_if>
                  </do_if>
                  <reset_cue cue="TriggerMission" comment="Allow it to be offered again (only 1 instance at a time), triggered by TriggerPeriodicCheck"/>
                </do_if>
                <do_elseif value="@static.$FeedbackValue">
                  <debug_text text="'Mission signalled with feedback' + static.$FeedbackValue" chance="$DebugChance"/>
                </do_elseif>
              </actions>
            </cue>
          </cues>
        </cue>
      </cues>
    </library>
  </cues>
</mdscript>
