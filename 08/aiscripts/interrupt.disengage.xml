<?xml version="1.0" encoding="utf-8"?>
<aiscript name="interrupt.disengage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd" priority="9">
  <!-- this interrupt handler expects that the referencing script has the following variables initialized:
        $target,
        $pursuetargets,
        $pursuedistance,
        $debugchance
  -->
  <interrupts>
    <library>
      <handler name="DisengageHandler">
        <!-- MAINTENANCE: keep in sync with similar handler in fight.attack.object.bigtarget -->
        <conditions>
          <check_any>
            <event_object_changed_owner object="$target" check="false"/>
            <check_all>
              <check_any>
                <event_object_relation_range_changed object="$target" faction="this.owner" check="false"/>
                <event_object_relation_range_changed object="this.assignedcontrolled" faction="@$target.owner" check="false"/>
              </check_any>
              <check_value value="not this.assignedcontrolled.mayattack.{$target}"/>
            </check_all>
            <check_all>
              <event_object_changed_sector object="$target" check="false"/>
              <check_value value="event.param.exists"/>
              <check_value value="@$target.sector != this.sector"/>
              <check_value value="not $pursuetargets"/>
              <set_value name="$disengage_pursue"/>
            </check_all>
            <check_all>
              <event_object_changed_zone object="$target" check="false"/>
              <check_any>
                <check_all>
                  <check_value value="@$target.zone.isclass.highway"/>
                  <set_value name="$disengage_pursue"/>
                </check_all>
                <check_all>
                  <check_value value="@$enforceradius"/>
                  <check_value value="@$radius and @$radiusanchorpos and @$radiusanchorspace"/>
                  <check_value value="not $pursuetargets"/>
                  <check_value value="$target.distanceto.[$radiusanchorspace, $radiusanchorpos] gt $radius"/>
                  <debug_text text="'disengaging target outside of radius.\n target distance from anchor: %sm\n radius: %sm'.[$target.distanceto.[$radiusanchorspace, $radiusanchorpos], $radius]" debugchance="$debugchance"/>
                </check_all>
              </check_any>
            </check_all>
            <check_all>
              <!-- live view is the gravidar of all player-owned things, so this can only apply to player-owned ships and stations. -->
              <event_object_left_live_view object="$target" check="false"/>

              <check_value value="this.object.isplayerowned"/>
              <check_value value="not $pursuedistance or @this.object.distanceto.{$target} gt $pursuedistance"/>
            </check_all>
            <check_all>
              <event_object_attacked_object object="this.assignedcontrolled" attacked="$target"/>
              <check_value value="$target.isindestructible"/>
              <check_value value="not @$forceprimarytarget"/>
              <check_value value="not this.isplayerowned or @this.object.order.$internalorder" comment="do not disengage if explicitly ordered to attack this target"/>
              <debug_text text="'%s %s %s is indestructible. breaking off.'.[@$target.idcode, @$target.knownname, $target]" debugchance="$debugchance"/>
            </check_all>
            <check_all>
              <event_boarding_operation_started/>
              <check_value value="event.param.boardee == $target"/>
              <check_value value="not $target.boardingoperation.attackers.count or not this.assignedcontrolled.hasrelation.enemy.{$target.boardingoperation.attackers.{1}.owner}"/>
            </check_all>
            <event_object_docked object="$target" check="false"/>
          </check_any>
        </conditions>
        <actions>
          <do_if value="event.name == 'event_object_changed_owner' and @$target.exists">
            <reset_relation_boost object="this.assignedcontrolled" otherobject="$target"/>
            <do_if value="this.assignedcontrolled.mayattack.{$target}">
              <debug_text text="'target is still hostile after ownership change. continuing attack.'" chance="$debugchance"/>
              <return/>
            </do_if>
          </do_if>

          <do_if value="event.name == 'event_object_attacked_object' and @$target.isindestructible">
            <do_if value="this.isplayerowned">
              <set_value name="$rep" exact="player.entity"/>
            </do_if>
            <do_elseif value="this.trueowner.representative">
              <set_value name="$rep" exact="this.trueowner.representative"/>
            </do_elseif>
            <do_else>
              <set_value name="$rep" exact="this"/>
            </do_else>

            <do_if value="$rep.$indestructibleobjects?">
              <do_if value="not $rep.$indestructibleobjects.indexof.{$target}">
                <append_to_list name="$rep.$indestructibleobjects" exact="$target"/>
              </do_if>
            </do_if>
            <do_else>
              <set_value name="$rep.$indestructibleobjects" exact="[$target]"/>
            </do_else>
          </do_if>

          <debug_text text="'%7 disengaging.\nwhy? %6\ntarget: %1 (%2)\npursuetargets: %3\npursuedistance: %4\ndistance to target: %5\ntarget is in highway: %8'.[$target.knownname, $target, $pursuetargets, $pursuedistance, this.object.distanceto.{$target}, event.name, this.object.knownname, $target.zone.isclass.highway]" chance="$debugchance"/>

          <do_if value="$disengage_pursue?">
            <remove_value name="$disengage_pursue"/>
            <abort_called_scripts resume="fight"/>
          </do_if>
          <do_else>
            <!-- Remove the target to stop shooting at it when owner changes -->
            <set_value name="$target" exact="null"/>

            <abort_called_scripts resume="finish"/>
          </do_else>
        </actions>
      </handler>
    </library>
  </interrupts>
</aiscript>