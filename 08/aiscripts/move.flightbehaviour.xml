<?xml version="1.0" encoding="utf-8" ?>
<aiscript name="move.flightbehaviour" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd">
  <!-- Movement that allows specifying a flight behaviour. Order will wait indefinitely after movement is complete unless there's another order in the ship's order queue.
       Note that flightbehaviours roll_cw and roll_ccw have infinite durations. -->
  <order id="MoveFlightbehaviour" name="{1041,541}" description="{1041,542}" category="internal" allowinloop="false" infinite="true">
    <params>
      <param name="destination" default="[this.ship.sector, this.ship.relativeposition.{this.ship.sector}]" type="position" text="{1041,10027}" comment="Destination. Position in a Sector.">
        <input_param name="class" value="class.sector"/>
      </param>
      <param name="flightbehaviour" default="flightbehaviour.generic" type="internal" comment="Flight behavior that the ship should execute"/>
      <param name="lookat" type="internal" default="null" comment="Position the ship should look at. Should be relative to $destination.{1}."/>
      <param name="delay" default="-1s" type="time" text="{1041,10177}" comment="Delay before movement is executed. -1s will skip the initial wait action.">
        <input_param name="startvalue" value="-1s"/>
        <input_param name="min" value="-1s"/>
        <input_param name="max" value="60s"/>
        <input_param name="step" value="1s"/>
      </param>
      <param name="debugchance" type="bool" default="0" advanced="true" text="{1041, 10086}" comment="Print debug output">
        <input_param name="truevalue" value="100"/>
      </param>
    </params>
    <requires>
      <match shiptype="shiptype.lasertower" negate="true"/>
      <match class="class.spacesuit" negate="true"/>
    </requires>
    <location object="$destination.{1}" position="$destination.{2}" condition="$destination.{1} and $destination.{2}" />
  </order>
  <attention min="visible">
    <actions>

      <label name="wait"/>

      <do_if value="$delay ge 0s">
        <wait exact="$delay"/>
      </do_if>

      <label name="move"/>

      <do_if value="$lookat">
        <create_orientation name="$rot" orientation="look_at" refposition="$lookat">
          <position value="$destination.{2}" object="$destination.{1}" space="$destination.{1}"/>
        </create_orientation>
      </do_if>

      <debug_text text="'Moving to:\n%s relative to %s %s %s %s.\nrot: %s'.[$destination.{2}, $destination.{1}.class, @$destination.{1}.idcode, @$destination.{1}.knownname, $destination.{1}, @$rot]" chance="$debugchance"/>
      <do_if value="$rot?">
        <move_to object="this.assignedcontrolled" destination="$destination.{1}" forcesteering="true" forcerotation="true" flightbehaviour="$flightbehaviour">
          <position value="$destination.{2}"/>
          <rotation value="$rot"/>
          <interrupt_after_time time="1s"/>
        </move_to>
      </do_if>
      <do_else>
        <move_to object="this.assignedcontrolled" destination="$destination.{1}" forcesteering="true" flightbehaviour="$flightbehaviour">
          <position value="$destination.{2}"/>
          <interrupt_after_time time="1s"/>
        </move_to>
      </do_else>

      <do_if value="@this.assignedcontrolled.order.id == 'MoveFlightbehaviour'">
        <set_order_syncpoint_reached order="this.assignedcontrolled.order"/>
      </do_if>
      <wait/>

      <label name="finish"/>

      <reset_flight_behaviour object="this.assignedcontrolled"/>
      <set_to_default_flight_control_model object="this.assignedcontrolled"/>

    </actions>
  </attention>
  <attention min="unknown">
    <actions>
      <label name="wait"/>

      <do_if value="$delay ge 0s">
        <wait exact="$delay"/>
      </do_if>

      <label name="move"/>

      <do_if value="$lookat">
        <create_orientation name="$rot" orientation="look_at" refposition="$lookat">
          <position value="$destination.{2}" object="$destination.{1}" space="$destination.{1}"/>
        </create_orientation>
      </do_if>

      <debug_text text="'Moving to:\n%s relative to %s %s %s %s.\nrot: %s\nIn low attention. specified flightbehaviour will not be executed.'.[$destination.{2}, $destination.{1}.class, @$destination.{1}.idcode, @$destination.{1}.knownname, $destination.{1}, @$rot]" chance="$debugchance"/>
      <do_if value="$rot?">
        <move_to object="this.assignedcontrolled" destination="$destination.{1}">
          <position value="$destination.{2}"/>
          <rotation value="$rot"/>
          <interrupt_after_time time="1s"/>
        </move_to>
      </do_if>
      <do_else>
        <move_to object="this.assignedcontrolled" destination="$destination.{1}">
          <position value="$destination.{2}"/>
          <interrupt_after_time time="1s"/>
        </move_to>
      </do_else>

      <!-- wait until we shift back to visible unless we have another order in the order queue. -->
      <do_if value="@this.assignedcontrolled.order.id == 'MoveFlightbehaviour'">
        <set_order_syncpoint_reached order="this.assignedcontrolled.order"/>
      </do_if>
      <wait/>

      <label name="finish"/>

      <reset_flight_behaviour object="this.assignedcontrolled"/>
      <set_to_default_flight_control_model object="this.assignedcontrolled"/>

    </actions>
  </attention>
  <on_abort>
    <reset_flight_behaviour object="this.assignedcontrolled"/>
    <set_to_default_flight_control_model object="this.assignedcontrolled"/>
  </on_abort>
</aiscript>