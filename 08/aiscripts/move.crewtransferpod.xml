<?xml version="1.0" encoding="utf-8" ?>
<aiscript name="move.crewtransferpod" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd">
  <params>
    <param name="target"/>
    <param name="origin"/>
    <param name="arrivaltime" default="0s"/>
    <param name="debugchance" default="0"/>
  </params>
  <interrupts>
    <handler>
      <conditions>
        <check_any>
          <event_object_destroyed object="$target"/>
          <event_object_abandoned object="$target"/>
          <check_all>
            <event_object_changed_true_owner object="$target"/>
            <check_value value="event.param != this.assignedcontrolled.trueowner"/>
          </check_all>
        </check_any>
      </conditions>
      <actions>
        <debug_text text="'destination %s %s %s destroyed. cleaning up.'.[@$target.idcode, @$target.knownname, $target]" chance="$debugchance"/>
        <abort_called_scripts resume="cleanup"/>
      </actions>
    </handler>
    <handler>
      <conditions>
        <event_object_docked object="$target"/>
        <check_value value="not $target.hascontext.{$docktarget}"/>
      </conditions>
      <actions>
        <debug_text text="'destination %s %s %s docked. changing docktarget to: %s %s %s.'.[@$target.idcode, @$target.knownname, $target, $target.container.idcode, $target.container.knownname, $target.container]" chance="$debugchance"/>
        <set_value name="$docktarget" exact="$target"/>
        <do_while value="$docktarget.container">
          <set_value name="$docktarget" exact="$docktarget.container"/>
        </do_while>
        <do_if value="$godock?">
          <abort_called_scripts resume="arrive"/>
        </do_if>
      </actions>
    </handler>
    <handler>
      <conditions>
        <event_object_undocked object="$target"/>
        <check_value value="not @$target.dock"/>
      </conditions>
      <actions>
        <debug_text text="'destination %s %s %s undocked. changing docktarget back.'.[@$target.idcode, @$target.knownname, $target]" chance="$debugchance"/>
        <set_value name="$docktarget" exact="$target"/>
        <do_if value="$godock?">
          <abort_called_scripts resume="arrive"/>
        </do_if>
      </actions>
    </handler>
  </interrupts>
  <init>
    <set_value name="$docktarget" exact="$target"/>
    <do_if value="@$docktarget.dock">
      <do_while value="$docktarget.container">
        <set_value name="$docktarget" exact="$docktarget.container"/>
      </do_while>
    </do_if>
  </init>
  <attention min="unknown">
    <actions>

      <label name="init"/>

      <do_if value="not $target.isoperational">
        <debug_text text="'init: destination is not operational. cleaning up.'" chance="$debugchance"/>
        <resume label="cleanup"/>
      </do_if>
      <do_if value="$target.isclass.ship_xs">
        <debug_text text="'init: destination is an XS ship which we cannot dock at. cleaning up.'" chance="$debugchance"/>
        <resume label="cleanup"/>
      </do_if>

      <set_command command="command.dockat" param="$target"/>
      <set_value name="$time_start" exact="player.age"/>

      <label name="undock"/>

      <do_if value="this.assignedcontrolled.dock">
        <debug_text text="'undocking from %s %s %s'.[@this.assignedcontrolled.container.idcode, @this.assignedcontrolled.container.knownname, this.assignedcontrolled.container]" chance="$debugchance"/>
        <run_script name="'move.undock'">
          <param name="debugchance" value="$debugchance"/>
        </run_script>
      </do_if>

      <do_if value="$docktarget.sector and ($docktarget.sector == this.sector)">
        <debug_text text="'already at target sector. docking.'" chance="$debugchance"/>
        <resume label="arrive"/>
      </do_if>

      <label name="move_to_destination"/>

      <set_value name="$timeremaining" exact="10min"/>
      <do_if value="$arrivaltime">
        <set_value name="$timeremaining" exact="$arrivaltime - player.age"/>
      </do_if>
      <debug_text text="player.age + ': moving to target. time remaining: %ss'.[$timeremaining]" chance="$debugchance"/>

      <move_to object="this.assignedcontrolled" destination="$docktarget" uselocalhighways="true" travel="true" finishonapproach="true">
        <interrupt>
          <conditions>
            <check_any>
              <event_object_entered_gate object="this.assignedcontrolled"/>
              <event_object_changed_sector object="this.assignedcontrolled"/>
              <check_all>
                <event_object_changed_sector object="$docktarget"/>
                <check_value value="this.sector and (event.param == this.sector)"/>
              </check_all>
              <event_object_target_invalid object="this.assignedcontrolled"/>
            </check_any>
          </conditions>
          <actions>
            <do_if value="(event.name == 'event_object_target_invalid') and not event.param2 and not $loop?">
              <set_value name="$loop"/>
              <debug_text text="'invalid movement target but target is reachable. restarting movement.'" chance="$debugchance"/>
              <resume label="move_to_destination"/>
            </do_if>
            <do_else>
              <set_value name="$targetsector" exact="$docktarget.sector"/>
              <do_if value="not $targetsector and $docktarget.zone.isclass.highway">
                <!-- go to highway origin and catch up -->
                <set_value name="$targetsector" exact="$docktarget.zone.origin.sector"/>
                <get_safe_pos result="$targetpos" sector="$targetsector" object="$docktarget.zone.entry" radius="this.assignedcontrolled.safesize * 2" ignored="this.assignedcontrolled">
                  <spacereservation component="this.assignedcontrolled" index="$loci" duration="1s" safezone="$locz">
                    <orientation orientation="look_at" refobject="$docktarget"/>
                  </spacereservation>
                </get_safe_pos>
              </do_if>
              <do_elseif value="this.sector and ($targetsector == this.sector)">
                <resume label="arrive"/>
              </do_elseif>
              <do_else>
                <find_object name="$closestentrance" space="$targetsector" class="[class.gate, class.highwayexitgate]" sortbydistanceto="$docktarget"/>
                <do_if value="@$closestentrance">
                  <get_safe_pos result="$targetpos" sector="$targetsector" object="$closestentrance" radius="this.assignedcontrolled.safesize * 2" ignored="this.assignedcontrolled">
                    <spacereservation component="this.assignedcontrolled" index="$loci" duration="1s" safezone="$locz">
                      <orientation orientation="look_at" refobject="$docktarget"/>
                    </spacereservation>
                  </get_safe_pos>
                </do_if>
                <do_else>
                  <debug_text text="'no gate found in sector %s %s. warping to target.'.[$targetsector.knownname, $targetsector]" chance="$debugchance"/>
                  <get_safe_pos result="$targetpos" sector="$targetsector" object="$docktarget" radius="this.assignedcontrolled.safesize * 2" ignored="this.assignedcontrolled">
                    <spacereservation component="this.assignedcontrolled" index="$loci" duration="1s" safezone="$locz">
                      <orientation orientation="look_at" refobject="$docktarget"/>
                    </spacereservation>
                  </get_safe_pos>
                </do_else>
              </do_else>
              <remove_value name="$loci"/>
              <remove_value name="$locz"/>
              <do_if value="@$targetsector and @$targetpos">
                <warp object="this.assignedcontrolled" sector="$targetsector">
                  <position value="$targetpos"/>
                </warp>
              </do_if>
              <do_else>
                <debug_text text="'targetsector or targetpos not set. targetsector: %s, targetpos: %s'.[@$targetsector, @$targetpos]" filter="error"/>
              </do_else>
              <debug_text text="'crew transfer pod moving to %s %s %s entered a gate. warped to %s %s %s'.[@$target.idcode, @$target.knownname, $target, $targetsector.class, $targetsector.knownname, $targetsector]" chance="$debugchance"/>
            </do_else>
          </actions>
        </interrupt>
      </move_to>
      <remove_value name="$loop"/>

      <label name="arrive"/>

      <do_if value="($target != $docktarget) and not $target.hascontext.{$docktarget}">
        <debug_text text="'target is not connected to docktarget. attempting to recover.'" filter="error"/>
        <set_value name="$docktarget" exact="$target"/>
        <do_if value="@$target.dock">
          <do_while value="$docktarget.container">
            <set_value name="$docktarget" exact="$docktarget.container"/>
          </do_while>
          <!-- dangerous. uncomment if objects changing sectors quickly becomes a problem. -->
          <!--<resume label="undock"/>-->
        </do_if>
      </do_if>

      <do_if value="$arrivaltime">
        <set_value name="$timeremaining" exact="$arrivaltime - player.age"/>
        <do_if value="($timeremaining lt 0s) or $docktarget.zone.isclass.highway">
          <debug_text text="'out of time or destination in a highway for an indefinite period of time. ending.\nout of time: %s\ntarget in highway: %s'.[$timeremaining lt 0s, $docktarget.zone.isclass.highway]" chance="$debugchance"/>
          <resume label="cleanup"/>
        </do_if>
        <debug_text text="'moving to dock.\ndestination: %s %s %s\ntime remaining: %ss'.[@$target.idcode, @$target.knownname, $target, $timeremaining]" chance="$debugchance"/>
      </do_if>

      <find_dockingbay name="$dock" object="$docktarget">
        <match_dock size="this.assignedcontrolled.docksize" storage="false"/>
      </find_dockingbay>
      <do_if value="$dock.isoperational">
        <move_to object="this.assignedcontrolled" destination="$dock" travel="true">
          <interrupt>
            <conditions>
              <check_any>
                <event_object_collided object="this.assignedcontrolled" otherobject="$docktarget"/>
                <event_object_target_invalid object="this.assignedcontrolled"/>
              </check_any>
            </conditions>
            <actions>
              <do_if value="event.name == 'event_object_target_invalid'">
                <do_if value="not event.param2 and not $loop?">
                  <set_value name="$loop"/>
                  <debug_text text="'invalid movement target but target is reachable. restarting movement.'" chance="$debugchance"/>
                  <resume label="arrive"/>
                </do_if>
                <do_elseif value="not $docktarget.zone.isclass.highway">
                  <debug_text text="'target is unreachable. attempting normal docking.'" chance="$debugchance"/>
                  <set_value name="$godock"/>
                </do_elseif>
              </do_if>
            </actions>
          </interrupt>
          <interrupt_after_time time="$timeremaining"/>
        </move_to>
      </do_if>
      <remove_value name="$loop"/>

      <do_if value="$godock?">
        <!-- docking too slow, but prettier. make below normal case and remove move_to above if too ugly, but speed is more important. -->
        <run_script name="'order.dock'" result="$dockresult">
          <param name="destination" value="$docktarget"/>
          <param name="abouttofinish" value="true"/>
          <param name="debugchance" value="$debugchance"/>
        </run_script>
      </do_if>

      <debug_text text="'successfully arrived at %s %s %s.\ntime elapsed: %ss\nideal duration: %ss'.[@$docktarget.idcode, @$docktarget.knownname, $docktarget, player.age - $time_start, if $arrivaltime then ($arrivaltime - $time_start) else 0s]" chance="$debugchance"/>

      <label name="cleanup"/>

      <destroy_object object="this.assignedcontrolled" explosion="false"/>

    </actions>
  </attention>
</aiscript>