<?xml version="1.0" encoding="utf-8"?>
<aiscript name="order.salvage.deliver.notrade" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd">
  <order id="SalvageDeliver_NoTrade" name="{1041, 811}" description="{1041, 812}" category="salvage">
    <params>
      <!-- NB: no specified ware since we want to sell whatever's in the lump of wreckage we're towing. -->
      <param name="destination" required="true" type="object" text="{1041, 10027}" comment="Destination. Station that processes scrap.">
        <input_param name="class" value="[class.station]"/>
      </param>

      <param name="internalorder" type="bool" default="false" advanced="true" text="{1041, 10159}" comment="Order results from an automated behavior."/>
      <param name="debugchance" type="bool" default="0" advanced="true" text="{1041, 10086}" comment="Print debug output">
        <input_param name="truevalue" value="100"/>
      </param>
    </params>
    <requires>
      <match shiptype="shiptype.tug"/>
    </requires>
    <location object="$destination" condition="$destination.isoperational"/>
  </order>
  <interrupts>
    <handler ref="SectorChangeHandler"/>
    <handler ref="AttackHandler"/>
    <handler ref="MissileLockHandler"/>
    <handler ref="ScannedHandler"/>
    <handler ref="InspectedHandler"/>
    <handler ref="FoundAbandonedHandler"/>
    <handler ref="FoundLockboxHandler"/>
    <handler ref="ResupplyHandler"/>
    <handler ref="TideHandler"/>
  </interrupts>
  <attention min="unknown">
    <actions>
      <set_value name="$result" exact="false"/>

      <label name="start"/>

      <do_if value="not $destination.exists">
        <debug_text text="'Attempting to execute SalvageDeliver_NoTrade with no valid destination.'" filter="error"/>
        <set_value name="$failurereason" exact="{1045, 101}" comment="Unable to reach destination."/>
        <resume label="finish"/>
      </do_if>

      <do_if value="not this.assignedcontrolled.towedobject">
        <debug_text text="'Attempting to execute SalvageDeliver_NoTrade without a towedobject.'" filter="error"/>
        <set_value name="$failurereason" exact="{1045, 116}" comment="Nothing to sell."/>
        <resume label="finish"/>
      </do_if>

      <do_if value="not this.assignedcontrolled.towedobject.recyclingwares.remaining.count">
        <debug_text text="'Towed object does not contain recyclable wares.'" filter="error"/>
        <set_value name="$failurereason" exact="{1045, 116}" comment="Nothing to sell."/>
        <resume label="finish"/>
      </do_if>

      <set_value name="$ware" exact="this.assignedcontrolled.towedobject.recyclingwares.remaining.random"/>
      <set_value name="$maxamount" exact="this.assignedcontrolled.towedobject.recyclingwares.remaining.{$ware}.count"/>

      <do_if value="$maxamount gt 0">
        <!-- changed this to a run script so that a buy is done before a sell if buy->sell are set in a pair or a loop. -->
        <run_script name="'order.trade.single'" result="$result">
          <param name="ware" value="$ware"/>
          <param name="locations" value="[$destination]"/>
          <param name="maxamount" value="$maxamount"/>
          <param name="minamount" value="0"/>
          <param name="pricethreshold" value="($ware.minprice / 1Cr)Cr"/>
          <param name="sell" value="true"/>
          <param name="internalorder" value="$internalorder"/>
          <param name="gotrade" value="true"/>
          <param name="debugchance" value="$debugchance"/>
        </run_script>
      </do_if>
      <do_else>
        <set_value name="$failurereason" exact="{1045, 116}" comment="Nothing to sell."/>
      </do_else>

      <label name="finish"/>

      <do_if value="not $result">
        <do_if value="$failurereason? and @this.assignedcontrolled.order.isrunning">
          <set_order_failed order="this.assignedcontrolled.order" text="$failurereason" recurring="$internalorder"/>
        </do_if>
        <wait min="17ms" max="3s"/>
      </do_if>

      <return value="$result"/>
    </actions>
  </attention>
</aiscript>