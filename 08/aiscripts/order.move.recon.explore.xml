<?xml version="1.0" encoding="utf-8"?>
<aiscript name="order.move.recon.explore" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd" version="5">
  <order id="Explore" name="{1041, 311}" description="{1041, 312}" category="navigation" allowinloop="false">
    <params>
      <param name="targetspace" type="internal" default="null" text="{1041, 10126}" comment="Target. Only accessible via interact menu and cannot be changed via UI outside of initial setup.">
        <input_param name="class" value="[class.sector, class.gate, class.highwayentrygate]"/>
      </param>
      <param name="destination" type="position" text="{1041, 10006}" default="null" comment="Area to explore. Position to start from.">
        <input_param name="class" value="class.sector"/>
      </param>
      <param name="radius" type="length" default="350km" text="{1041, 10093}" comment="Radius">
        <input_param name="min" value="0m"/>
        <input_param name="max" value="350km"/>
        <input_param name="step" value="1km"/>
      </param>
      <param name="timeout" type="time" default="0s" text="{1041, 10034}" advanced="true" comment="Duration">
        <input_param name="min" value="0s"/>
        <input_param name="max" value="24h"/>
        <input_param name="step" value="10min"/>
      </param>
      <param name="deploysatellites" type="bool" default="false" advanced="true" text="Deploy Satellites" comment="deploy satellites at points of interest if any are available. will get more satellites if possible.">
        <patch value="false" sinceversion="2"/>
      </param>
      <param name="debugchance" type="bool" default="0" advanced="true" text="{1041, 10086}" comment="Print debug output">
        <input_param name="truevalue" value="100"/>
      </param>
    </params>
    <skill min="60"/>
    <requires>
      <match shiptype="shiptype.lasertower" negate="true"/>
      <match class="class.spacesuit" negate="true"/>
    </requires>
    <location object="@$destination.{1}" position="@$destination.{2}" radius="$radius" condition="@$destination.{1} and $destination.{1}.isclass.sector"/>
    <location object="$targetspace" position="$targetspace.coreposition" radius="$targetspace.coresize/2m" condition="not @$destination.{1} and $targetspace.isclass.sector"/>
    <location object="$targetspace.destination.sector" position="$targetspace.destination.sector.coreposition" radius="$targetspace.destination.sector.coresize/2m" condition="not @$destination.{1} and $targetspace.isclass.gate and $targetspace.destination"/>
    <location object="$targetspace.highway.destination.sector" position="$targetspace.highway.destination.sector.coreposition" radius="$targetspace.highway.destination.sector.coresize/2m" condition="not @$destination.{1} and $targetspace.isclass.highwayentrygate and $targetspace.highway.destination"/>
    <location object="$targetspace.destination.sector" position="$targetspace.destination.sector.coreposition" radius="$targetspace.destination.sector.coresize/2m" condition="not @$destination.{1} and @$targetspace.issuperhighway and $targetspace.destination"/>
  </order>
  <interrupts>
    <handler ref="SectorChangeHandler"/>
    <handler ref="TargetInvalidHandler"/>
    <handler ref="AttackHandler"/>
    <handler ref="MissileLockHandler" />
    <handler ref="ScannedHandler"/>
    <handler ref="InspectedHandler"/>
    <handler ref="FoundAbandonedHandler"/>
    <handler ref="FoundLockboxHandler"/>
    <handler ref="ResupplyHandler"/>
  </interrupts>
  <patch sinceversion="1">
    <do_if value="this.assignedcontrolled.defaultorder.id == 'Explore'">
      <debug_text text="'PATCH: replacing Explore default order with a normal order.'" filter="savegame"/>
      <create_order id="'Explore'" object="this.assignedcontrolled">
        <param name="targetspace" value="$targetspace"/>
        <param name="destination" value="$destination"/>
        <param name="radius" value="$radius"/>
        <param name="timeout" value="$timeout"/>
        <param name="deploysatellites" value="$deploysatellites"/>
        <param name="debugchance" value="$debugchance"/>
      </create_order>
      <!-- ship will get a new default order when it gets to the end of its order queue. -->
      <cancel_order order="this.assignedcontrolled.defaultorder"/>
    </do_if>
  </patch>
  <patch sinceversion="5">
    <set_value name="$loctargetspace" exact="$targetspace"/>
    <do_if value="not $targetspace.isclass.sector">
      <do_if value="$targetspace.isclass.gate and $targetspace.destination">
        <set_value name="$loctargetspace" exact="$targetspace.destination.sector"/>
      </do_if>
      <do_elseif value="$targetspace.isclass.highwayentrygate and $targetspace.highway.destination">
        <set_value name="$loctargetspace" exact="$targetspace.highway.destination.sector"/>
      </do_elseif>
      <do_elseif value="$targetspace.isclass.highway and $targetspace.issuperhighway and $targetspace.destination">
        <set_value name="$loctargetspace" exact="$targetspace.destination.sector"/>
      </do_elseif>
      <do_else>
        <debug_text text="'invalid targetspace: %s %s %s'.[$targetspace.class, $targetspace.knownname, $targetspace]" filter="error"/>
      </do_else>
    </do_if>
    <do_if value="@$destination.{1} and $loctargetspace and $destination.{1} != $loctargetspace">
      <debug_text text="'PATCH: mismatch between destination: %s %s and targetspace: %s %s. correcting targetspace to match destination.'.[$destination.{1}.class, $destination.{1}.knownname, $loctargetspace.class, $loctargetspace.knownname]" filter="savegame"/>
      <set_value name="$targetspace" exact="$destination.{1}"/>
      <edit_order_param order="this.assignedcontrolled.order" param="'targetspace'" value="$targetspace"/>
    </do_if>
  </patch>
  <attention min="unknown">
    <actions>

      <!-- cases:
        normal init1 (from map, target gate or superhighwaygate): targetspace is defined, destination is null
          derive destination from targetspace
        normal init2 (from map, target position in space): targetspace is defined, destination is defined, match
          no action
        normal init3 (from order queue menu): destination is defined, targetspace is null
          derive targetspace from current context
          detect mismatch between destination and targetspace
          adjust targetspace to match destination
        edit: targetspace is defined, destination is defined, mismatch
          adjust targetspace to match destination
        venture: neither targetspace nor destination is defined
          derive targetspace from ship's current context
          derive destination from targetspace
      -->

      <do_if value="not $targetspace" comment="for venture support where we cannot define targetspace">
        <debug_text text="'no targetspace defined. deriving targetspace from current context.'" chance="$debugchance"/>
        <do_if value="this.sector">
          <set_value name="$targetspace" exact="this.sector"/>
        </do_if>
        <do_else>
          <do_if value="this.zone.issuperhighway">
            <set_value name="$targetspace" exact="this.zone.destination.sector"/>
          </do_if>
          <do_else>
            <debug_text text="'%s %s %s is neither in a sector nor in a superhighway. zone: %s %s. aborting.'.[this.assignedcontrolled.idcode, this.assignedcontrolled.knownname, this.assignedcontrolled, this.zone.knownname, this.zone]" filter="error"/>
            <resume label="cleanup"/>
          </do_else>
        </do_else>
        <do_if value="$targetspace">
          <debug_text text="'targetspace defined: %s %s %s'.[$targetspace.class, $targetspace.knownname, $targetspace]" chance="$debugchance"/>
          <edit_order_param order="this.assignedcontrolled.order" param="'targetspace'" value="$targetspace" comment="will cause script to restart"/>
        </do_if>
      </do_if>

      <do_if value="$targetspace and not @$destination.{1}">
        <debug_text text="'no destination defined. deriving destination from targetspace.'" chance="$debugchance"/>
        <do_if value="$targetspace.isclass.sector">
          <set_value name="$destination" exact="[$targetspace, $targetspace.coreposition]"/>
        </do_if>
        <do_elseif value="$targetspace.isclass.gate and $targetspace.destination">
          <set_value name="$destination" exact="[$targetspace.destination.sector, $targetspace.destination.sector.coreposition]"/>
        </do_elseif>
        <do_elseif value="$targetspace.isclass.highwayentrygate and $targetspace.highway.destination">
          <set_value name="$destination" exact="[$targetspace.highway.destination.sector, $targetspace.highway.destination.sector.coreposition]"/>
        </do_elseif>
        <do_elseif value="$targetspace.isclass.highway and $targetspace.issuperhighway and $targetspace.destination">
          <set_value name="$destination" exact="[$targetspace.destination.sector, $targetspace.destination.sector.coreposition]"/>
        </do_elseif>
        <do_else>
          <debug_text text="'invalid targetspace: %s %s %s. attempting to recover.'.[$targetspace.class, $targetspace.knownname, $targetspace]" filter="error"/>
          <edit_order_param order="this.assignedcontrolled.order" param="'targetspace'" value="null" comment="will cause script to restart"/>
        </do_else>

        <do_if value="@$destination.{1}">
          <set_value name="$radius" exact="$destination.{1}.coresize / 2m"/>
          <debug_text text="'destination defined: %s %s %s. radius: %sm'.[$destination.{1}.class, $destination.{1}.knownname, $destination, $radius]" chance="$debugchance"/>
          <edit_order_param order="this.assignedcontrolled.order" param="'destination'" value="$destination" comment="will cause script to restart"/>
          <edit_order_param order="this.assignedcontrolled.order" param="'radius'" value="$radius" comment="will cause script to restart"/>
        </do_if>
      </do_if>

      <set_value name="$loctargetspace" exact="$targetspace"/>
      <do_if value="not $targetspace.isclass.sector">
        <do_if value="$targetspace.isclass.gate and $targetspace.destination">
          <set_value name="$loctargetspace" exact="$targetspace.destination.sector"/>
        </do_if>
        <do_elseif value="$targetspace.isclass.highwayentrygate and $targetspace.highway.destination">
          <set_value name="$loctargetspace" exact="$targetspace.highway.destination.sector"/>
        </do_elseif>
        <do_elseif value="$targetspace.isclass.highway and $targetspace.issuperhighway and $targetspace.destination">
          <set_value name="$loctargetspace" exact="$targetspace.destination.sector"/>
        </do_elseif>
        <do_else>
          <debug_text text="'invalid targetspace: %s %s %s. aborting.'.[$targetspace.class, $targetspace.knownname, $targetspace]" filter="error"/>
          <resume label="cleanup"/>
        </do_else>
      </do_if>
      <debug_text text="'destination: %s %s %s, targetspace: %s %s %s'.[@$destination.{1}.class, @$destination.{1}.knownname, $destination.{1}, @$loctargetspace.class, @$loctargetspace.knownname, $loctargetspace]" chance="$debugchance"/>
      <do_if value="@$destination.{1} and $loctargetspace and $destination.{1} != $loctargetspace">
        <debug_text text="'mismatch between destination: %s %s and targetspace: %s %s. normal on edit. updating targetspace to match destination.'.[$destination.{1}.class, $destination.{1}.knownname, $loctargetspace.class, $loctargetspace.knownname]" chance="$debugchance"/>
        <set_value name="$targetspace" exact="$destination.{1}"/>
        <edit_order_param order="this.assignedcontrolled.order" param="'targetspace'" value="$targetspace"/>
      </do_if>
      <remove_value name="$loctargetspace"/>

      <wait exact="1s" sinceversion="3"/>

      <do_if value="$destination and not @$destination.{1}.isclass.sector">
        <debug_text text="'destination provided, but it is not relative to a sector. destination.{1}: %s %s %s, destination.{2}: %s. aborting.'.[@$destination.{1}.class, @$destination.{1}.knownname, @$destination.{1}, @$destination.{2}]" filter="error"/>
        <set_value name="$destination" exact="null"/>
        <resume label="cleanup"/>
      </do_if>

      <label name="start"/>

      <do_if value="$destination and (this.sector != $destination.{1} or @this.ship.bboxdistanceto.{$destination} gt 10km)">
        <!-- Command Info -->
        <set_command command="command.movetozone" param="$destination.{1}"/>
        <run_script name="'move.generic'" result="$movesuccess">
          <param name="destination" value="$destination.{1}"/>
          <param name="position" value="$destination.{2}"/>
          <param name="useknownpath" value="false"/>
          <param name="debugchance" value="$debugchance"/>
        </run_script>
        <do_if value="not $movesuccess">
          <do_if value="@this.assignedcontrolled.order.isrunning">
            <set_order_failed order="this.assignedcontrolled.order" text="{1045, 101}" comment="Unable to reach destination."/>
          </do_if>
          <debug_text text="'Unable to reach destination. Aborting.'" chance="$debugchance"/>
          <resume label="cleanup"/>
        </do_if>
      </do_if>

      <run_script name="'order.move.recon'">
        <param name="targetspace" value="$targetspace"/>
        <param name="radius" value="$radius"/>
        <param name="timeout" value="$timeout"/>
        <param name="blindtourist" value="this.isplayerowned"/>
        <param name="targetclasses" value="[class.station, class.gate]"/>
        <param name="debugchance" value="$debugchance"/>
      </run_script>

      <label name="cleanup"/>

    </actions>
  </attention>
</aiscript>
