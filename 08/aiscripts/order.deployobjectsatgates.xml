<?xml version="1.0" encoding="utf-8" ?>
<aiscript name="order.deployobjectsatgates" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd">
  <order id="DeployObjectsAtGates" name="{1041, 761}" description="{1041, 762}" category="internal" infinite="true" allowinloop="false">
    <params>
      <param name="targetsector" type="sector" text="{1041, 10117}" required="true" default="null" comment="Sector where deployables are to be deployed."/>
      <!-- TODO: add input param type deployablecategory -->
      <param name="deployablecategory" default="null" type="internal" text="{1041, 10171}" comment="Type of deployable to be deployed."/>
      <!-- add radius? tricky since safe radius varies depending on size of this.ship, object density around destination, and number of objects to deploy. -->
      <param name="debugchance" type="bool" default="0" advanced="true" text="{1041, 10086}" comment="Print debug output">
        <input_param name="truevalue" value="100"/>
      </param>
    </params>
    <requires>
      <match shiptype="shiptype.lasertower" negate="true"/>
      <match class="class.spacesuit" negate="true"/>
    </requires>
    <location object="$targetsector" condition="this.ship.ammostorage.deployable.count"/>
  </order>
  <interrupts>
    <handler ref="SectorChangeHandler"/>
    <handler ref="TargetInvalidHandler"/>
    <handler ref="AttackHandler"/>
    <handler ref="MissileLockHandler" />
    <handler ref="ScannedHandler"/>
    <handler ref="InspectedHandler"/>
    <handler ref="FoundAbandonedHandler"/>
    <handler ref="FoundLockboxHandler"/>
    <handler ref="ResupplyHandler"/>
    <handler ref="TideHandler"/>
  </interrupts>
  <attention min="unknown">
    <actions>

      <do_if value="not $targetsector and this.assignedcontrolled.isonlineobject">
        <do_if value="not this.assignedcontrolled.sector">
          <debug_text text="'Visitor ship %s %s %s is not in a sector. Unable to initialize. Aborting.'.[@this.assignedcontrolled.idcode, this.assignedcontrolled.knownname, this.assignedcontrolled]" filter="error"/>
          <resume label="finish"/>
        </do_if>
        <set_value name="$targetsector" exact="this.assignedcontrolled.sector"/>
        <do_if value="this.assignedcontrolled.order and this.assignedcontrolled.order.$targetsector?">
          <edit_order_param order="this.assignedcontrolled.order" param="'targetsector'" value="$targetsector"/>
        </do_if>
      </do_if>
      <debug_text text="'initializing. targetsector: %s %s, deployablecategory: %s'.[$targetsector.knownname, $targetsector, $deployablecategory]" chance="$debugchance"/>

      <do_if value="not $targetsector">
        <debug_text text="'No input targetsector.'" filter="error"/>
        <resume label="finish"/>
      </do_if>
      <do_elseif value="not $targetsector.isclass.sector">
        <debug_text text="'Input targetsector is a %1. Should be a sector.'.[$targetsector.{1}.class]" filter="error"/>
        <resume label="finish"/>
      </do_elseif>

      <do_if value="not $deployablecategory">
        <debug_text text="'No input deployablecategory.'" filter="error"/>
        <resume label="finish"/>
      </do_if>
      <do_elseif value="typeof $deployablecategory != datatype.deployablecategory">
        <debug_text text="'Input deployablecategory: %s is of invalid datatype.'.[$deployablecategory]" filter="error"/>
        <resume label="finish"/>
      </do_elseif>

      <label name="prep"/>

      <!-- set potential positions -->
      <set_value name="$positions" exact="[]"/>

      <find_gate name="$gates" space="$targetsector" active="true" multiple="true"/>
      <set_value name="$reffaction" exact="this.trueowner"/>
      <do_if value="this.assignedcontrolled.isonlineobject">
        <set_value name="$reffaction" exact="faction.player"/>
      </do_if>
      <debug_text text="'targetsector: %s %s.\nfound %s gates.\nref faction: %s'.[$targetsector.knownname, $targetsector, $gates.count, $reffaction]" chance="$debugchance"/>

      <set_value name="$evalgates" exact="$gates.clone"/>
      <do_for_each name="$locgate" in="$evalgates" reverse="true">
        <do_if value="not $locgate.destination.exists">
          <remove_from_list name="$evalgates" exact="$locgate"/>
        </do_if>
        <do_else>
          <do_if value="this.assignedcontrolled.mayattack.{$reffaction}">
            <do_if value="$targetsector.owner.mayattack.{$reffaction}">
              <do_if value="$locgate.destination.owner.mayattack.{$reffaction}">
                <remove_from_list name="$evalgates" exact="$locgate"/>
              </do_if>
            </do_if>
          </do_if>
          <do_else>
            <do_if value="not $targetsector.owner.mayattack.{$reffaction}">
              <do_if value="not $locgate.destination.owner.mayattack.{$reffaction}">
                <remove_from_list name="$evalgates" exact="$locgate"/>
              </do_if>
            </do_if>
          </do_else>
        </do_else>
      </do_for_each>
      <do_if value="$evalgates.count">
        <debug_text text="'no hostile targets. seeding all gates.'" chance="$debugchance"/>
        <set_value name="$gates" exact="$evalgates.clone"/>
      </do_if>
      <remove_value name="$evalgates"/>

      <do_for_each name="$locgate" in="$gates">
        <do_if value="$locgate.isaccelerator">
          <create_position name="$locpos" space="$targetsector" z="-3km - this.assignedcontrolled.size" max="[1500m - this.assignedcontrolled.size, 1m].max" object="$locgate"/>
        </do_if>
        <do_else>
          <create_position name="$locpos" space="$targetsector" z="3km + this.assignedcontrolled.size" max="[1500m - this.assignedcontrolled.size, 1m].max" object="$locgate"/>
        </do_else>
        <append_to_list name="$positions" exact="$locpos"/>
      </do_for_each>

      <label name="start" />

      <!-- check supplies -->
      <set_value name="$urgent" exact="not this.assignedcontrolled.ammostorage.{$deployablecategory}.count"/>
      <do_if value="$deployablecategory == deployablecategory.mine">
        <set_value name="$urgent" exact="true"/>
        <do_for_each name="$locmacro" in="this.assignedcontrolled.ammostorage.{$deployablecategory}.list">
          <do_if value="$locmacro.isfriendfoe">
            <set_value name="$urgent" exact="false"/>
            <break/>
          </do_if>
        </do_for_each>
      </do_if>
      <do_if value="this.assignedcontrolled.loadoutlevel == 0">
        <!-- NB: this will be missed for player-owned ships since their loadout level is a bit more complicated. -->
        <debug_text text="'WARNING: %s %s %s will be unable to get deployables due to having a loadout level of 0. Ship will only deploy what it already has.'.[this.assignedcontrolled.idcode, this.assignedcontrolled.knownname, this.assignedcontrolled]"/>
      </do_if>
      <!-- NB: positions are lost and later reinitialized when we go resupply. -->
      <signal_objects object="this.assignedcontrolled" param="'resupply'" param2="[$urgent, null, $deployablecategory]" param3="$debugchance" comment="param2 = [urgent?, resupplystationID, $deployablecategory], param3 = $debugchance"/>
      <wait exact="1s"/>

      <!-- set position -->
      <do_if value="not $targetpos?">
        <do_if value="not $positions.count">
          <debug_text text="'positions exhausted. getting new positions.'" chance="$debugchance"/>
          <resume label="prep"/>
        </do_if>
        <set_value name="$targetpos" exact="null"/>
        <shuffle_list list="$positions"/>
        <do_for_each name="$locpos" in="$positions">
          <find_object name="$locdeployable" space="$targetsector" trueowner="this.trueowner" deployablecategory="$deployablecategory">
            <match_distance value="$locpos" space="$targetsector" max="1km"/>
          </find_object>
          <do_if value="not $locdeployable.isoperational">
            <set_value name="$targetpos" exact="$locpos"/>
            <break/>
          </do_if>
        </do_for_each>
        <remove_value name="$locdeployable"/>
        <do_if value="not $targetpos">
          <set_value name="$targetpos" exact="$positions.random"/>
        </do_if>
        <remove_from_list name="$positions" exact="$targetpos"/>
      </do_if>

      <!-- deploy -->
      <set_value name="$objectstodeploy" exact="[]"/>
      <set_value name="$amountstodeploy" exact="[]"/>
      <!-- NB: at this point, we should have gotten supplies if able to do so. -->
      <do_if value="this.assignedcontrolled.ammostorage.{$deployablecategory}.count">
        <do_for_each name="$locmacro" valuename="$locamount" in="this.assignedcontrolled.ammostorage.{$deployablecategory}.table">
          <do_if value="($deployablecategory != deployablecategory.mine) or $locmacro.isfriendfoe">
            <append_to_list name="$objectstodeploy" exact="$locmacro"/>
            <append_to_list name="$amountstodeploy" exact="$locamount"/>
            <debug_text text="'valid deployables on board. adding %s %s.'.[$locamount, $locmacro]" chance="$debugchance"/>
          </do_if>
        </do_for_each>
      </do_if>

      <do_if value="not $objectstodeploy.count">
        <debug_text text="'no available valid deployable macros of type %s. exiting script.'.[$deployablecategory]" filter="error"/>
        <resume label="finish"/>
      </do_if>

      <!-- run_script rather than create_order so that we can set syncpoint reached after deploying the first field. -->
      <run_script name="'order.deployobjectatposition'">
        <param name="destination" value="[$targetsector, $targetpos]"/>
        <param name="objectstodeploy" value="$objectstodeploy"/>
        <param name="amountstodeploy" value="$amountstodeploy"/>
        <param name="debugchance" value="$debugchance"/>
      </run_script>

      <!-- loop back -->
      <do_if value="@this.assignedcontrolled.order.isinfinite">
        <!-- syncpoint reached after first field has been deployed. -->
        <set_order_syncpoint_reached order="this.assignedcontrolled.order"/>
      </do_if>
      <remove_value name="$targetpos"/>
      <resume label="start"/>

      <label name="finish"/>

      <do_if value="@this.assignedcontrolled.order.isinfinite">
        <cancel_order order="this.assignedcontrolled.order"/>
      </do_if>

    </actions>
  </attention>
</aiscript>