<?xml version="1.0" encoding="iso-8859-1" ?>
<aiscript name="interrupt.attacked" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd" priority="10">
  <params>
    <param name="attacker"/>
    <param name="attackrespond"/>
    <param name="callforhelp"/>
    <param name="fleerespond"/>
    <param name="debugchance" default="0" />
  </params>
  <interrupts>
    <library>
      <handler name="AttackHandler">
        <conditions>
          <check_any>
            <event_object_attacked object="this.defensible"/>
            <event_object_signalled object="this.defensible" param2="'boarding_operation_detected'"/>
          </check_any>
          <check_value value="event.object.signal.{'attacked'}.response.id != 'ignore'"/>
          <!-- basic check [class.ship_l, class.ship_xl] -->
          <check_value value="event.object.isclass.ship" />
          <!-- Do not flee nor re-engage if already fleeing. -->
          <check_value value="this.command.value != command.withdrawbattle"/>
          <!-- Do not re-evaluate if already attacking the attacker. -->
          <check_value value="not (this.command.value == command.attackobject and this.command.param == event.param)" />
          <!-- Only respond to attacks if object uses orders -->
          <check_value value="event.object.order"/>
          <check_value value="not event.object.order.haspriority"/>
          <check_any>
            <check_value value="event.object.order.state != orderstate.critical"/>
            <!-- SalvageCrush has handling for being interrupted while critical -->
            <check_value value="event.object.order.id == 'SalvageCrush'"/>
          </check_any>
          <check_value value="not @$noattackresponse and not @this.$noattackresponse"/>
          <!-- if attack was deliberate, relation change should have already been applied at this point. -->
          <check_value value="event.param.isoperational and event.object.mayattack.{event.param}" />
          <check_value value="(not event.object.parkedat) and (not event.object.assigneddock) and (not event.object.dock) and (not event.object.zone.isclass.highway)" />
          <check_any>
            <check_value value="not @event.object.commander.isoperational"/>
            <check_value value="not event.object.subordinategroupdockoverride"/>
          </check_any>
          <check_value value="event.object.trueowner != event.param.trueowner"/>
          <!-- Respond conditions -->
          <check_any comment="fight or flight">
            <!-- Flee response -->
            <check_all comment="flee">
              <check_value value="not event.object.isunit"/>
              <check_any>
                <check_value value="event.object.signal.{'attacked'}.response.id == 'flee'"/>
                <check_value value="event.object.signal.{'attacked'}.response.id == 'distract'"/>
                <check_all>
                  <check_value value="event.object.signal.{'attacked'}.response.id == 'auto'"/>
                  <check_any>
                    <check_value value="event.object.combinedskill ge 20" comment="at least 1 star on average"/>
                    <check_value value="event.object.isplayerowned"/>
                  </check_any>
                  <check_any>
                    <!-- higher morale, flee at more shield damage
                      at 15 morale, flee at lt 15% shield,
                      at 9 morale, flee at lt 33% shield,
                      at 0 morale, flee at lt 60% shield.

                      pilots in combat ships evaluate morale as if they had 1 star more.

                    OR

                    higher combined skill, flee at more time to die
                      at 100 combinedskill, flee at lt 30 seconds,
                      at 80 combinedskill, flee at lt 10 seconds,
                      70 combinedskill and below do not consider time to die.

                    NB: Pilots with 5-star morale in a combat ship will NEVER fail the morale check.
                        They will only flee if they judge that they will die in less time than it takes to escape. -->
                    <check_value value="((this.skill.morale * 6) + ((event.object.primarypurpose == purpose.fight) * 20) + (event.object.shieldpercentage * 2)) lt 120"/>
                    <check_value value="((event.object.combinedskill)hp - ((event.object.shield + event.object.hull) / [event.param.dps.all, 1hp].max)) gt 70"/>
                  </check_any>
                </check_all>
              </check_any>
              <!--<check_value value="(((this.skill.morale * 6) + event.object.shieldpercentage) lt 120) or (((event.object.combinedskill) - event.object.hullpercentage) le 20)"/>-->
              <set_value name="$fleerespond" exact="true" />
            </check_all>
            <!-- Attack response -->
            <check_all comment="fight">
              <check_value value="not event.object.buildorders.count"/>
              <check_value value="event.object.dps.all"/>
              <check_any>
                <check_value value="event.object.signal.{'attacked'}.response.id == 'attack'"/>
                <check_all>
                  <!-- NB: if we get here, we've decided not to flee. -->
                  <check_value value="event.object.signal.{'attacked'}.response.id == 'auto'"/>
                  <!--<check_value value="not this.defensible.isplayerowned" comment="not engage player owned ships" />-->
                  <check_value value="not event.object.iscapitalship" comment="if this is a capship, let the Defence Computer handle it" />
                  <!--<check_value value="(not event.param.isclass.{class.station}) and (this.defensible.dps.all gt event.param.dps.all)"/>-->
                  <check_any>
                    <!-- xenon or khaak ships always immediately respond to attack. condition should only hold if this handler is not in order.fight.attack.object so that these ships won't keep redirecting attacks. -->
                    <check_value value="(@event.object.order.id != 'Attack') and ((this.trueowner == faction.xenon) or (this.trueowner == faction.khaak))"/>
                    <!-- can i destroy my attacker before it can destroy me? approximation. -->
                    <check_value value="((event.param.hull + event.param.shield) / [event.object.dps.all, 1hp].max) lt ((event.object.hull + event.object.shield) / [event.param.dps.all, 1hp].max)"/>
                  </check_any>
                </check_all>
              </check_any>
              <set_value name="$attackrespond" exact="true" />
            </check_all>
            <!-- Call for help -->
            <!-- MAINTENANCE: if <check_all comment="call for help"> is ever changed, update patch in ego_dlc_pirate to sync. -->
            <check_all comment="call for help">
              <!-- NB: removed insector check and changed signal object to player.galaxy so that the PCS can listen for all of them. revert here, in order.fight.attack.object.station, and in FactionGoal_PatrolCoordination_Service if this proves to be a bad idea. -->
              <check_value value="not this.isclass.computer"/>
              <check_any>
                <check_value value="event.object.primarypurpose" exact="purpose.fight" negate="true"/>
                <check_value value="event.name == 'event_object_signalled'"/>
              </check_any>
              <check_value value="event.object.isclass.ship_xs" negate="true"/>
              <check_value value="event.param.isclass.[class.station, class.ship_xs]" negate="true"/>
              <check_value value="event.object.zone.policefaction and (event.object.relationto.{event.object.zone.policefaction} ge 0)"/>
              <check_value value="not event.object.coverowner"/>
              <check_any>
                <check_value value="event.object.isclass.defensible and not event.object.isvisitor"/>
                <check_value value="event.object.defensible and not event.object.defensible.isvisitor"/>
                <check_value value="not event.param.isplayerowned or event.object.trueowner.iscoalitionally.{faction.player}"/>
              </check_any>
              <set_value name="$callforhelp" exact="true"/>
            </check_all>
            <!-- added in ego_dlc_pirate. relies on comment="call for help" above. -->
            <!--<check_all comment="loanshark">
              <check_value value="this.trueowner == faction.loanshark"/>
              <check_value value="this.sector and (this.sector.owner != this.trueowner)"/>
              <check_value value="not this.$time_loanshark_lastcalledforhelp? or ((player.age - this.$time_loanshark_lastcalledforhelp) gt 15s)"/>
              <set_value name="$loanshark_callforhelp"/>
            </check_all>-->
          </check_any>
        </conditions>
        <actions>
          <!-- Only enter on the interrupt_script if it's really going to perform any action,
          otherwise the current action could be interrupted for a frame and restarted again -->
          <do_if value="event.object.hull">
            <debug_text text="'%s %s %s attacked.\nattacker: %s %s %s\nresponse: %s\nattacking: %s\nfleeing: %s'.[this.assignedcontrolled.idcode, this.assignedcontrolled.knownname, this.assignedcontrolled, @event.param.idcode, @event.param.knownname, event.param, this.assignedcontrolled.signal.{'attacked'}.response.id, @$attackrespond, @$fleerespond]" chance="0"/>
            <!-- Attack respond if there are weapons -->
            <do_if value="@$attackrespond">
              <debug_text text="'%1 taking fire from %2. Attacking. \n class: %3, purpose: %4, \n time to destroy attacker: %5, time to destroy me: %6'.[event.object.knownname, event.param.knownname, event.object.class, event.object.primarypurpose, (event.param.hull + event.param.shield) / [event.object.dps.all, 1hp].max, (event.object.hull + event.object.shield) / [event.param.dps.all, 1hp].max]" chance="$debugchance"/>

              <!-- if this ship decides to attack while it was moving to a distant location, cancel the subordinates' orders (to dock, or move ahead, or whatever) so the whole squadron could attack. -->
              <do_if value="this.$recalling_subordinates?">
                <do_if value="typeof this.$recalling_subordinates == datatype.list">
                  <set_value name="$interrupt_subordinateorders" exact="this.$recalling_subordinates.clone"/>
                  <do_all exact="$interrupt_subordinateorders.count" counter="$i" >
                    <cancel_order order="$interrupt_subordinateorders.{$i}" />
                  </do_all>
                </do_if>
                <remove_value name="this.$recalling_subordinates" />
              </do_if>

              <do_if value="event.param.isoperational">
                <create_order object="event.object" id="'Attack'" immediate="true" override="true">
                  <param name="primarytarget" value="event.param"/>
                  <param name="escort" value="if event.object.isformationwingman then event.object.commander else null" comment="no error if there is no commander" />
                  <param name="pursuetargets" value="false" />
                  <param name="squad_attack" value="true"/>
                  <param name="internalorder" value="true"/>
                  <param name="allowothertargets" value="false" />
                </create_order>
                <do_if value="(@event.object.order.state == orderstate.critical) and @event.object.order.id == 'SalvageCrush'">
                  <cancel_order order="event.object.order"/>
                </do_if>
              </do_if>
              <do_else>
                <debug_text text="'i am itching to fight but my attacker is already dead.'" chance="0"/>
              </do_else>

            </do_if>
            <do_elseif value="@$fleerespond">
              <debug_text text="'%1 taking fire from %2. Fleeing. \n morale: %3, shield: %4, shield cutoff: %8, \n combinedskill: %5, time to die: %6, time cutoff: %9, \n purpose: %7'.[event.object.knownname, event.param.knownname, this.skill.morale, event.object.shieldpercentage, event.object.combinedskill, (event.object.shield + event.object.hull) / [event.param.dps.all, 1hp].max, event.object.primarypurpose, (120 - (this.skill.morale * 6) - ((event.object.primarypurpose == purpose.fight) * 20)) / 2, event.object.combinedskill - 70]" chance="$debugchance"/>
              <!-- Flee -->
              <do_if value="event.object.iscapitalship">
                <set_value name="$flee" exact="'boost'" />
              </do_if>
              <do_elseif value="event.param.isclass.station or event.param.iscapitalship">
                <set_value name="$flee" exact="'boost'"     weight="2"/>
                <set_value name="$flee" exact="'highway'"   weight="3"/>
                <set_value name="$flee" exact="'dock'"      weight="3"/>
              </do_elseif>
              <do_else>
                <do_any>
                  <set_value name="$flee" exact="'boost'"     weight="20" />
                  <set_value name="$flee" exact="'maneuver'"  weight="20" />
                  <set_value name="$flee" exact="'highway'"   weight="30" />
                  <set_value name="$flee" exact="'dock'"      weight="30" />
                </do_any>
              </do_else>

              <!-- If there is a flee option -->
              <do_if value="$flee?" >
                <debug_text text="'%4: flee with %1. Hull %2/Shield %3'.[$flee, event.object.hullpercentage, event.object.shieldpercentage, player.age]" chance="0"/>

                <do_all exact="event.object.orders.count + 1" counter="$counter_orders">
                  <do_if value="$counter_orders gt event.object.orders.count">
                    <debug_text text="'%1 (%2) fleeing and resupplying.'.[event.object.knownname, event.object]" chance="$debugchance"/>
                    <signal_objects object="event.object" param="'resupply'" param2="[false]" param3="$debugchance" delay="10ms" comment="param2 = [urgent?, resupplystationID], param3 = $debugchance"/>
                  </do_if>
                  <do_elseif value="event.object.orders.{$counter_orders}.id" exact="'Resupply'">
                    <debug_text text="'%1 (%2) fleeing but already has a resupply order.'.[event.object.knownname, event.object]" chance="$debugchance"/>
                    <break/>
                  </do_elseif>
                </do_all>

                <create_order object="event.object" id="'Flee'" immediate="true" override="true">
                  <param name="method" value="$flee" />
                  <param name="attacker" value="event.param" />
                  <param name="deploydistraction" value="not event.object.isplayerowned or (@event.object.signal.{'attacked'}.response.id == 'distract')"/>
                </create_order>
                <do_if value="(@event.object.order.state == orderstate.critical) and @event.object.order.id == 'SalvageCrush'">
                  <cancel_order order="event.object.order"/>
                </do_if>

                <debug_text text="'%1: flee %2. Hull %4/Shield %5'.[player.age, $flee, event.object.hullpercentage, event.object.shieldpercentage]" chance="0"/>
              </do_if>

              <!-- Flee and Call for help -->
              <!-- NB: repeated conditions here since these do not get evaluated in conditions if a ship decides to flee. difference: combat ships will call for help if they decide to flee, but will not call for help if they decide to just shrug you off. -->
              <do_if value="not this.isclass.computer 
                     and not event.param.isclass.[class.station, class.ship_xs] 
                     and not event.object.isclass.ship_xs 
                     and this.zone.policefaction 
                     and (event.object.relationto.{this.zone.policefaction} ge 0) 
                     and not event.object.coverowner 
                     and ((event.object.isclass.defensible and not event.object.isvisitor) 
                      or (event.object.defensible and not event.object.defensible.isvisitor) 
                      or not event.param.isplayerowned 
                      or event.object.trueowner.iscoalitionally.{faction.player})">
                <do_if value="not @$distressdrone_sentagainst.indexof.{event.param.owner} and not event.object.zone.isclass.highway">
                  <launch_distressdrone name="$_locdrone" object="event.object" attacker="event.param" macro="macro.ship_gen_xs_distressbeacon_01_a_macro"/>
                  <do_if value="this.isplayerowned">
                    <set_object_radar_visible object="$_locdrone" visible="false"/>
                  </do_if>
                  <remove_value name="$_locdrone"/>
                  <do_if value="not @$distressdrone_sentagainst.count">
                    <set_value name="$distressdrone_sentagainst" exact="[event.param.owner]"/>
                  </do_if>
                  <do_else>
                    <append_to_list name="$distressdrone_sentagainst" exact="event.param.owner"/>
                  </do_else>
                </do_if>
                <signal_objects object="player.galaxy" param="'ship_in_distress'" param2="event.object" param3="event.param" delay="10ms"/>
                <do_if value="this.sector">
                  <signal_objects object="this.sector" param="'ship_in_distress'" param2="event.object" param3="event.param" delay="10ms"/>
                </do_if>
                <debug_text text="'%1 under attack. Fleeing and calling for help.'.[this.defensible.knownname]" chance="$debugchance"/>
              </do_if>
            </do_elseif>
            <!-- MAINTENANCE: if <do_elseif value="@$callforhelp"> is ever changed, update patch in ego_dlc_pirate to sync. -->
            <do_elseif value="@$callforhelp">
              <do_if value="not @$distressdrone_sentagainst.indexof.{event.param.owner} and not event.object.zone.isclass.highway">
                <launch_distressdrone name="$_locdrone" object="event.object" attacker="event.param" macro="macro.ship_gen_xs_distressbeacon_01_a_macro"/>
                <do_if value="this.isplayerowned">
                  <set_object_radar_visible object="$_locdrone" visible="false"/>
                </do_if>
                <remove_value name="$_locdrone"/>
                <do_if value="not @$distressdrone_sentagainst.count">
                  <set_value name="$distressdrone_sentagainst" exact="[event.param.owner]"/>
                </do_if>
                <do_else>
                  <append_to_list name="$distressdrone_sentagainst" exact="event.param.owner"/>
                </do_else>
              </do_if>
              <signal_objects object="player.galaxy" param="'ship_in_distress'" param2="event.object" param3="event.param" delay="10ms"/>
              <do_if value="this.sector">
                <signal_objects object="this.sector" param="'ship_in_distress'" param2="event.object" param3="event.param" delay="10ms"/>
              </do_if>
              <debug_text text="'%1 (%2) under attack. Calling for help.'.[this.defensible.knownname, this.defensible]" chance="$debugchance"/>
            </do_elseif>

            <!-- added in ego_dlc_pirate -->
            <!--<do_if value="not @$loanshark_callforhelp">
              <signal_objects object="player.galaxy" param="'ship_in_distress'" param2="event.object" param3="event.param" delay="10ms"/>
              <do_if value="this.sector">
                <signal_objects object="this.sector" param="'ship_in_distress'" param2="event.object" param3="event.param" delay="10ms"/>
              </do_if>
              <debug_text text="'%1 (%2) under attack. Calling for help.'.[this.defensible.knownname, this.defensible]" chance="@$debugchance"/>
              <set_value name="this.$time_loanshark_lastcalledforhelp" exact="player.age"/>
            </do_if>-->

            <!-- bailing as a result of attack by player-owned objects trigger md.Notifications.PlayerOwnedShipAttacks directly. -->
            <do_if value="not event.param.isplayerowned and (@$fleerespond or @$attackrespond or @$callforhelp)">
              <!-- NB: params set up to be consistent with those of event_player_owned_attacked_object -->
              <debug_text text="'signalling bail evaluation.\nattacker: %s %s %s\ntarget: %s %s %s'.[@event.param.idcode, @event.param.knownname, event.param, @event.object.idcode, @event.object.knownname, event.object]" chance="0"/>
              <signal_objects object="player.galaxy" param="event.param" param2="event.object" param3="'shouldwebail'" delay="10ms"/>
            </do_if>
          </do_if>
          <!-- Clear flags -->
          <remove_value name="$attackrespond" />
          <remove_value name="$fleerespond" />
          <remove_value name="$callforhelp" />
        </actions>
      </handler>
    </library>
  </interrupts>
</aiscript>
