<?xml version="1.0" encoding="utf-8" ?>
<aiscript name="order.rescue.inrange" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd">
  <order id="RescueInRange" name="{1041, 901}" description="{1041, 902}" category="navigation" allowinloop="false">
    <params>
      <param name="destination" type="position" text="{1041, 10176}" comment="Center of area in which people will be rescued. Position">
        <input_param name="class" value="class.sector"/>
      </param>
      <param name="radius" type="length" default="this.ship.maxradarrange" text="{1041, 10093}" comment="Radius">
        <input_param name="min" value="1km"/>
        <input_param name="max" value="[this.ship.maxradarrange, 1km].max"/>
        <input_param name="step" value="1km"/>
      </param>
      <param name="debugchance" type="bool" default="0" advanced="true" text="{1041, 10086}" comment="Print debug output">
        <input_param name="truevalue" value="100"/>
      </param>
    </params>
    <requires>
      <match shiptype="shiptype.lasertower" negate="true"/>
      <match class="class.spacesuit" negate="true"/>
    </requires>
    <location object="$destination.{1}" position="$destination.{2}" radius="$radius"/>
  </order>
  <interrupts>
    <handler ref="SectorChangeHandler"/>
    <handler ref="ScannedHandler"/>
    <handler ref="InspectedHandler"/>
    <handler ref="TargetInvalidHandler"/>
    <handler ref="ResupplyHandler"/>
    <handler ref="TideHandler"/>
  </interrupts>
  <init>
    <do_if value="$destination.{1}.isclass.sector">
      <set_value name="$targetsector" exact="$destination.{1}"/>
    </do_if>
    <do_elseif value="$destination.{1}.isclass.zone">
      <do_if value="$destination.{1}.isclass.highway">
        <debug_text text="'%1 (%2) was sent to attack everything inside a highway. This is not supported. Destination Space: %3 (%4), Position: %5'.[this.assignedcontrolled.knownname, this.assignedcontrolled, $destination.{1}.knownname, $destination.{1}, $destination.{2}]" filter="error"/>
        <cancel_order order="this.assignedcontrolled.order"/>
      </do_if>
      <do_elseif value="$destination.{1}.sector">
        <set_value name="$targetsector" exact="$destination.{1}.sector"/>
        <create_position name="$position" space="$targetsector" value="$destination.{2}" object="$destination.{1}"/>
      </do_elseif>
      <do_else>
        <debug_text text="'Zone is not in a sector and is not a highway. Destination Space: %1 (%2), Position: %3'.[$destination.{1}.knownname, $destination.{1}, $destination.{2}]" filter="error"/>
        <cancel_order order="this.assignedcontrolled.order"/>
      </do_else>
    </do_elseif>
    <do_else>
      <debug_text text="'Input destination is not in a valid space. Destination Space: %1 (%2), Position: %3'.[$destination.{1}.knownname, $destination.{1}, $destination.{2}]" filter="error"/>
      <cancel_order order="this.assignedcontrolled.order"/>
    </do_else>
    <set_value name="$position" exact="$destination.{2}"/>
  </init>
  <attention min="unknown">
    <actions>
      <do_if value="not this.assignedcontrolled.people.free">
        <do_if value="@this.assignedcontrolled.order.isrunning">
          <set_order_failed order="this.assignedcontrolled.order" text="{1045, 145}" comment="No space available for additional crew."/>
        </do_if>
        <debug_text text="'no space left for crew. aborting.'" chance="$debugchance"/>
        <resume label="finish"/>
      </do_if>

      <label name="start"/>

      <!-- if not in area, go there -->
      <do_if value="(this.sector != $targetsector) or (this.assignedcontrolled.distanceto.[$targetsector, $position] gt $radius)">
        <run_script name="'move.generic'" result="$movesuccess">
          <param name="destination" value="$targetsector"/>
          <param name="position" value="$position"/>
          <param name="radius" value="$radius"/>
          <param name="radiusanchorpos" value="$position"/>
          <param name="radiusanchorspace" value="$targetsector"/>
          <param name="debugchance" value="$debugchance"/>
        </run_script>
        <do_if value="not $movesuccess">
          <do_if value="@this.assignedcontrolled.order.isrunning">
            <set_order_failed order="this.assignedcontrolled.order" text="{1045, 101}" comment="Unable to reach destination."/>
          </do_if>
          <debug_text text="'Unable to reach destination. Aborting.'" chance="$debugchance"/>
          <resume label="finish"/>
        </do_if>
      </do_if>

      <label name="acquiretargets"/>

      <!-- short wait with randomized duration to reduce chances of multiple ships trying to rescue the same person. any such attempts will be rejected or returned here by RescueShip. -->
      <wait min="0s" max="1s"/>

      <!-- do not cache since the people that can be rescued may change between runs. -->
      <find_ship_by_true_owner groupname="$targets" space="$targetsector" faction="this.trueowner" docked="false" class="class.spacesuit" checkoperational="true" sortbydistanceto="this.assignedcontrolled" multiple="true">
        <match_context macro="$targetsector.macro"/>
        <match_distance max="$radius" value="$position" space="$targetsector"/>
      </find_ship_by_true_owner>
      <do_for_each name="$loctarget" in="$targets" reverse="true">
        <do_if value="$targetsector != $loctarget.sector or not $loctarget.pilot or (@$loctarget.order.id == 'DockAt' and $loctarget.order.$destination != this.assignedcontrolled)">
          <debug_text text="'%s %s %s not in sector or has no pilot or is already docking elsewhere. removing.'.[@$loctarget.idcode, @$loctarget.knownname, $loctarget]" chance="$debugchance"/>
          <remove_from_group group="$targets" object="$loctarget"/>
        </do_if>
      </do_for_each>
      <debug_text text="'%s %s %s found %s targets.'.[this.assignedcontrolled.idcode, this.assignedcontrolled.knownname, this.assignedcontrolled, $targets.count]" chance="$debugchance"/>
      <do_if value="not @$targets.count">
        <resume label="finish"/>
      </do_if>

      <label name="pickup"/>

      <do_if value="not this.assignedcontrolled.people.free">
        <do_if value="@this.assignedcontrolled.order.isrunning">
          <set_order_failed order="this.assignedcontrolled.order" text="{1045, 145}" comment="No space available for additional crew."/>
        </do_if>
        <debug_text text="'no space left for crew. aborting.'" chance="$debugchance"/>
        <resume label="finish"/>
      </do_if>

      <!-- order everyone to approach and pick the closest one up -->
      <!-- randomize who we pick up to reduce the chance of multiple ships trying to rescue the same person. -->
      <set_value name="$maxpickup" exact="this.assignedcontrolled.people.free"/>
      <set_value name="$numpickup" exact="0"/>
      <set_value name="$pickupindex" min="1" max="[$targets.count, $maxpickup].min" profile="decreasing"/>
      <debug_text text="'inviting %s people aboard and picking up %s %s in %s %s %s'.[$targets.count, $targets.{$pickupindex}.pilot.knownname, $targets.{$pickupindex}.pilot, @$targets.{$pickupindex}.idcode, @$targets.{$pickupindex}.knownname, $targets.{$pickupindex}]" chance="$debugchance"/>
      <do_for_each name="$loctarget" in="$targets" counter="$i">
        <do_if value="$loctarget.pilot != player.entity and @$loctarget.order.id != 'DockAt'">
          <set_value name="$numpickup" exact="$numpickup + 1"/>
          <cancel_all_orders object="$loctarget"/>
          <do_if value="$i != $pickupindex">
            <create_order id="'MoveToObject'" object="$loctarget" immediate="true">
              <param name="destination" value="this.assignedcontrolled"/>
            </create_order>
          </do_if>
        </do_if>
        <do_if value="$numpickup ge $maxpickup">
          <debug_text text="'crew at capacity. requesting %s people to approach. %s people left.'.[$numpickup, $targets.count]" chance="$debugchance"/>
          <break/>
        </do_if>
      </do_for_each>
      <create_order id="'RescueShip'" object="this.assignedcontrolled" immediate="true">
        <param name="target" value="$targets.{$pickupindex}"/>
        <param name="internalorder" value="true"/>
        <param name="debugchance" value="$debugchance"/>
      </create_order>

      <label name="finish"/>

      <wait exact="1s" comment="short wait to allow orders.base to start the RescueShip order and prevent this order from completing."/>

      <do_if value="this.isplayerowned and not this.isclass.computer and not this.assignedcontrolled.nextorder and (not this.assignedcontrolled.commander or (this.assignedcontrolled.commander == player.occupiedship)) and notification.npc_await_orders.active">
        <!-- Player notification -->
        <set_value name="$speakline" exact="10304" comment="Awaiting orders."/>
        <run_script name="'player.interaction'">
          <param name="Line" value="$speakline"/>
          <param name="MaxQueueDelay" value="10s"/>
          <param name="caption" value="{1016,6}.[this.assignedcontrolled.knownname, this.assignedcontrolled.idcode]"/>
          <param name="interactive" value="false"/>
          <param name="debugchance" value="$debugchance"/>
        </run_script>
      </do_if>

    </actions>
  </attention>
</aiscript>
