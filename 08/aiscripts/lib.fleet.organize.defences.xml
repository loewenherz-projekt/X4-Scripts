<?xml version="1.0" encoding="utf-8"?>
<aiscript name="lib.fleet.organize.defences" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd">
  <interrupts>
    <library>
      <actions name="OrganizeSubordinates_Defences">
        <!-- NB: if defined, can use variables: $defences_refobject, $defences_maxgatedistance, and $defences_includedassignments; default to this.assignedcontrolled, 0, and [assignment.defence, assignment.attack, assignment.interception] respectively. -->
        <do_if value="this.assignedcontrolled.commander">
          <debug_text text="'%s %s %s is itself a subordinate. Unable to organize defences.'.[@this.assignedcontrolled.idcode, @this.assignedcontrolled.knownname, this.assignedcontrolled]" filter="error"/>
          <return/>
        </do_if>

        <do_if value="@this.assignedcontrolled.type != shiptype.carrier">
          <debug_text text="'%s %s %s is not a carrier. Unable to organize defences.'.[@this.assignedcontrolled.idcode, @this.assignedcontrolled.knownname, this.assignedcontrolled]" filter="error"/>
          <return/>
        </do_if>

        <do_if value="not this.assignedcontrolled.activesubordinategroupids.count">
          <debug_text text="'OrganizeSubordinates_Defences called on object: %s %s %s with no subordinategroups.'.[@this.assignedcontrolled.idcode, @this.assignedcontrolled.knownname, this.assignedcontrolled]" chance="@$debugchance"/>
          <return/>
        </do_if>

        <do_if value="not @$defences_refobject">
          <do_if value="not $defences_refobject?">
            <set_value name="$_clearobj"/>
          </do_if>
          <set_value name="$defences_refobject" exact="this.assignedcontrolled"/>
        </do_if>

        <do_if value="not $defences_maxgatedistance?">
          <set_value name="$defences_maxgatedistance" exact="0"/>
          <set_value name="$_cleardist"/>
        </do_if>
        <do_elseif value="$defences_maxgatedistance lt 0">
          <debug_text text="'invalid $defences_maxgatedistance: %s. capping to 0.'.[$defences_maxgatedistance]" filter="error"/>
          <set_value name="$defences_maxgatedistance" exact="0"/>
        </do_elseif>

        <do_if value="not @$defences_includedassignments.count">
          <do_if value="not $defences_includedassignments?">
            <set_value name="$_clearassignmentvars"/>
          </do_if>
          <set_value name="$defences_includedassignments" exact="[assignment.defence, assignment.attack, assignment.interception, assignment.bombardment]"/>
        </do_if>

        <find_sector_in_range name="$_sectors" object="$defences_refobject" mindistance="0" maxdistance="$defences_maxgatedistance" reachablefrom="$defences_refobject" multiple="true">
          <match_relation_to faction="this.owner" relation="ally" comparison="ge"/>
        </find_sector_in_range>
        <do_if value="$_sectors.count">
          <shuffle_list list="$_sectors"/>
          <!-- NB: prioritizing distant sectors. we'll later have to iterate over $_gates in $_sectors in reverse. -->
          <sort_list list="$_sectors" sortbyvalue="$defences_refobject.gatedistance.{loop.element}"/>
          <do_if value="true" chance="0">
            <debug_text text="'sorted sectors by gatedistance'"/>
            <do_for_each name="$_locsector" in="$_sectors">
              <debug_text text="'%s, %s'.[$_locsector.knownname, $defences_refobject.gatedistance.{$_locsector}]"/>
            </do_for_each>
          </do_if>

          <set_value name="$_subordinategroups" exact="this.assignedcontrolled.activesubordinategroupids"/>
          <do_for_each name="$_locgroup" in="$_subordinategroups" reverse="true">
            <do_if value="not $defences_includedassignments.indexof.{this.assignedcontrolled.subordinategroupassignment.{$_locgroup}} and (this.assignedcontrolled.subordinategroupassignment.{$_locgroup} != assignment.positiondefence)">
              <remove_from_list name="$_subordinategroups" exact="$_locgroup"/>
              <debug_text text="'removed group %s that has invalid assignment: %s. remaining groups: %s'.[$_locgroup, this.assignedcontrolled.subordinategroupassignment.{$_locgroup}, $_subordinategroups]" chance="@$debugchance"/>
            </do_if>
            <do_elseif value="(this.assignedcontrolled.subordinategroupassignment.{$_locgroup} == assignment.positiondefence) and $_sectors.indexof.{this.assignedcontrolled.subordinatesingroup.{$_locgroup}.{1}.subordinategroupprotectedsector}">
              <remove_from_list name="$_subordinategroups" exact="$_locgroup"/>
              <debug_text text="'removed group %s that is already defending a valid position. remaining groups: %s'.[$_locgroup, $_subordinategroups]" chance="@$debugchance"/>
            </do_elseif>
          </do_for_each>

          <do_if value="$_subordinategroups.count">
            <do_for_each name="$_locsector" in="$_sectors">
              <find_gate name="$_gates" space="$_locsector" active="true" multiple="true" append="true"/>
            </do_for_each>

            <do_if value="$_gates.count">
              <set_value name="$_sortedgates" exact="[]"/>
              <set_value name="$_hostilegates" exact="[]"/>
              <set_value name="$_enemygates" exact="[]"/>
              <set_value name="$_neutralgates" exact="[]"/>
              <do_for_each name="$_locgate" in="$_gates" reverse="true">
                <do_if value="$_locgate.destination.owner.ishostileto.{this.owner}">
                  <append_to_list name="$_hostilegates" exact="$_locgate"/>
                  <remove_from_list name="$_gates" exact="$_locgate"/>
                </do_if>
                <do_elseif value="$_locgate.destination.owner.hasrelation.enemy.{this.owner}">
                  <append_to_list name="$_enemygates" exact="$_locgate"/>
                  <remove_from_list name="$_gates" exact="$_locgate"/>
                </do_elseif>
                <do_elseif value="$_locgate.destination.owner.hasrelation.neutral.{this.owner}">
                  <append_to_list name="$_neutralgates" exact="$_locgate"/>
                  <remove_from_list name="$_gates" exact="$_locgate"/>
                </do_elseif>
              </do_for_each>
              <debug_text text="'gates sorted. hostile: %s, enemy: %s, neutral: %s, friendly: %s'.[$_hostilegates.count, $_enemygates.count, $_neutralgates.count, $_gates.count]" chance="@$debugchance"/>
              <append_list_elements name="$_sortedgates" other="$_hostilegates"/>
              <append_list_elements name="$_sortedgates" other="$_enemygates"/>
              <append_list_elements name="$_sortedgates" other="$_neutralgates"/>
              <do_if value="not $_sortedgates.count">
                <append_list_elements name="$_sortedgates" other="$_gates" reverse="true"/>
              </do_if>
              <do_if value="true" chance="@$debugchance">
                <debug_text text="'sorted gates by priority'"/>
                <do_for_each name="$_locgate" in="$_sortedgates">
                  <debug_text text="'%s going to %s, %s, hostile: %s, enemy: %s, neutral: %s'.[$_locgate.sector.knownname, $_locgate.destination.sector.knownname, $defences_refobject.gatedistance.{$_locgate}, $_hostilegates.indexof.{$_locgate}, $_enemygates.indexof.{$_locgate}, $_neutralgates.indexof.{$_locgate}]"/>
                </do_for_each>
              </do_if>
              <remove_value name="$_hostilegates"/>
              <remove_value name="$_enemygates"/>
              <remove_value name="$_neutralgates"/>
              <remove_value name="$_gates"/>

              <shuffle_list list="$_subordinategroups"/>
              <do_for_each name="$_locgroup" in="$_subordinategroups" counter="$_i">
                <!-- NB: we're pairing an unknown number of groups with an unknown number of gates. make sure that $_sortedgates gets a valid index in case there are more $_subordinategroups than $_sortedgates -->
                <set_value name="$_locgate" exact="$_sortedgates.{(($_i - 1) % $_sortedgates.count) + 1}"/>
                <do_if value="not $_locgate.isoperational or not $_locgate.destination">
                  <debug_text text="'gate %s %s is invalid.'.[$_locgate.knownname, $_locgate]" filter="error"/>
                </do_if>
                <debug_text text="'sending subordinate group %s to protect %s gate leading to %s.'.[$_locgroup, @$_locgate.sector.knownname, @$_locgate.destination.sector.knownname]" chance="@$debugchance"/>
                <set_subordinate_group_protected_sector commander="this.assignedcontrolled" subordinategroupid="$_locgroup" sector="$_locgate.sector"/>
                <set_subordinate_group_protected_position commander="this.assignedcontrolled" subordinategroupid="$_locgroup" object="$_locgate" space="$_locgate.sector"/>
                <set_subordinate_group_assignment object="this.assignedcontrolled.subordinatesingroup.{$_locgroup}.{1}" commander="this.assignedcontrolled" subordinategroupid="$_locgroup" assignment="assignment.positiondefence"/>
              </do_for_each>
              <remove_value name="$_locgate"/>
            </do_if>
            <do_else>
              <debug_text text="'%s %s %s has no valid gates to organize defences at, %s gatedistance.'.[@this.assignedcontrolled.idcode, @this.assignedcontrolled.knownname, this.assignedcontrolled, $defences_maxgatedistance]" filter="error"/>
            </do_else>
          </do_if>
          <do_else>
            <debug_text text="'%s %s %s has no valid subordinate groups.'.[@this.assignedcontrolled.idcode, @this.assignedcontrolled.knownname, this.assignedcontrolled]" chance="@$debugchance"/>
          </do_else>
        </do_if>
        <do_else>
          <debug_text text="'%s %s %s has no valid sectors to organize defences in out to %s gatedistance.'.[@this.assignedcontrolled.idcode, @this.assignedcontrolled.knownname, this.assignedcontrolled, $defences_maxgatedistance]" filter="error"/>
        </do_else>
        <remove_value name="$_sortedgates"/>
        <remove_value name="$_subordinategroups"/>
        <remove_value name="$_sectors"/>
        <do_if value="$_clearassignmentvars?">
          <remove_value name="$_clearassignmentvars"/>
          <remove_value name="$defences_includedassignments"/>
        </do_if>
        <do_if value="$_cleardist?">
          <remove_value name="$_cleardist"/>
          <remove_value name="$defences_maxgatedistance"/>
        </do_if>
        <do_if value="$_clearobj?">
          <remove_value name="$_clearobj"/>
          <remove_value name="$defences_refobject"/>
        </do_if>
      </actions>
    </library>
  </interrupts>
</aiscript>