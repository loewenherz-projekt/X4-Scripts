<?xml version="1.0" encoding="utf-8"?>
<aiscript name="order.recycle.default" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd">
  <order id="RecycleDefault" name="{1041, 721}" description="{1041, 722}" category="internal" infinite="true" allowinloop="false">
    <params>
      <param name="preferredstation" type="internal" default="null"/>
      <param name="stationstoavoid" type="internal" default="[]" comment="populated by order.build.recycle as needed if unable to dock"/>
      <param name="debugchance" type="bool" default="0" advanced="true" text="{1041, 10086}" comment="Print debug output">
        <input_param name="truevalue" value="100"/>
      </param>
    </params>
    <requires>
      <match shiptype="shiptype.lasertower" negate="true"/>
    </requires>
  </order>
  <interrupts>
    <handler ref="AttackHandler"/>
    <handler ref="MissileLockHandler" />
    <handler ref="ScannedHandler"/>
    <handler ref="InspectedHandler"/>
    <handler ref="FoundAbandonedHandler"/>
    <handler ref="FoundLockboxHandler"/>
  </interrupts>
  <init>
    <set_command command="command.recycle"/>
  </init>
  <attention min="unknown">
    <actions>
      <find_station_by_true_owner name="$stations" space="player.galaxy" faction="this.assignedcontrolled.trueowner" canbuildclass="this.assignedcontrolled.class" excluded="$stationstoavoid" reachablefrom="this.zone" multiple="true"/>
      <do_if value="not $stations.count">
        <debug_text text="'No valid recycling stations found. Aborting.'" chance="$debugchance"/>
        <resume label="finish"/>
      </do_if>

      <debug_text text="'evaluating %s potential recycling stations.'.[$stations.count]" chance="$debugchance"/>
      <sort_list list="$stations" sortbyvalue="this.assignedcontrolled.gatedistance.{loop.element}"/>
      <do_if value="@$preferredstation.isoperational">
        <do_if value="$stations.indexof.{$preferredstation}">
          <remove_from_list name="$stations" exact="$preferredstation"/>
        </do_if>
        <set_value name="$stations.{1}" exact="$preferredstation" operation="insert"/>
      </do_if>
      <do_for_each name="$locstation" in="$stations">
        <!-- NB: for failure handling, important that this order is a default order -->
        <add_build_to_recycle_ship result="$recycletask" object="$locstation" buildobject="this.assignedcontrolled" faction="this.assignedcontrolled.trueowner"/>
        <do_if value="$recycletask.exists">
          <debug_text text="'recycling at %s %s %s in sector %s.'.[@$locstation.idcode, @$locstation.knownname, $locstation, $locstation.sector.knownname]" chance="$debugchance"/>
          <break/>
        </do_if>
      </do_for_each>
      <do_if value="not $recycletask.exists">
        <debug_text text="'add_build_to_recycle_ship failed to add build to recycle ship.'" filter="error"/>
        <resume label="finish"/>
      </do_if>

      <!-- at this point, a new order MUST have been created. -->
      <do_if value="not this.assignedcontrolled.orders.count">
        <debug_text text="'no new order created. about to wait indefinitely.'" filter="error"/>
      </do_if>

      <!-- NB: script being executed without it being an order should be considered an error. -->
      <set_order_syncpoint_reached order="this.assignedcontrolled.order"/>

      <wait/>

      <label name="finish"/>

      <create_order id="'MoveDie'" object="this.assignedcontrolled"/>

      <!-- short wait to allow order-related events to fire in case the order ends without hitting any blocking actions. -->
      <wait exact="1ms"/>
    </actions>
  </attention>
</aiscript>